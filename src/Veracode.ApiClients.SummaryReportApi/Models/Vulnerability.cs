// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Veracode.ApiClients.SummaryReportApi.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Vulnerability
    /// </summary>
    public partial class Vulnerability
    {
        /// <summary>
        /// Initializes a new instance of the Vulnerability class.
        /// </summary>
        public Vulnerability()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Vulnerability class.
        /// </summary>
        /// <param name="cveId">Common Vulnerabilities and Exposures (CVE) ID
        /// of the vulnerability.</param>
        /// <param name="cvssScore">Common Vulnerability Scoring System (CVSS)
        /// score. Measures the level of complexity for the vulnerability. The
        /// value is a range of 0 to 10 with 10 representing the highest
        /// complexity.</param>
        /// <param name="severity">Veracode Level for the severity of the
        /// vulnerability. The value range is 0 to 5, with 5 being the highest
        /// severity.</param>
        /// <param name="cweId">Common Weakness Enumration (CWE) ID for the
        /// vulnerability.</param>
        /// <param name="firstFoundDate">Date when Veracode first discovered
        /// the vulnerability.</param>
        /// <param name="cveSummary">CVE summary for the vulnerability.</param>
        /// <param name="severityDesc">Severity description for the
        /// vulnerbseverity.</param>
        /// <param name="mitigation">Vulnerability mitigation status.</param>
        /// <param name="mitigationType">Type of mitigation applied to the
        /// vulnerability, if any.</param>
        /// <param name="mitigatedDate">Mitigation date for teh
        /// vulnerability.</param>
        /// <param name="vulnerabilityAffectsPolicyCompliance">Whether the
        /// vulnerability affects SCA policy compliance.</param>
        public Vulnerability(string cveId = default(string), double? cvssScore = default(double?), long? severity = default(long?), string cweId = default(string), string firstFoundDate = default(string), string cveSummary = default(string), string severityDesc = default(string), string mitigation = default(string), string mitigationType = default(string), string mitigatedDate = default(string), string vulnerabilityAffectsPolicyCompliance = default(string))
        {
            CveId = cveId;
            CvssScore = cvssScore;
            Severity = severity;
            CweId = cweId;
            FirstFoundDate = firstFoundDate;
            CveSummary = cveSummary;
            SeverityDesc = severityDesc;
            Mitigation = mitigation;
            MitigationType = mitigationType;
            MitigatedDate = mitigatedDate;
            VulnerabilityAffectsPolicyCompliance = vulnerabilityAffectsPolicyCompliance;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets common Vulnerabilities and Exposures (CVE) ID of the
        /// vulnerability.
        /// </summary>
        [JsonProperty(PropertyName = "cve_id")]
        public string CveId { get; set; }

        /// <summary>
        /// Gets or sets common Vulnerability Scoring System (CVSS) score.
        /// Measures the level of complexity for the vulnerability. The value
        /// is a range of 0 to 10 with 10 representing the highest complexity.
        /// </summary>
        [JsonProperty(PropertyName = "cvss_score")]
        public double? CvssScore { get; set; }

        /// <summary>
        /// Gets or sets veracode Level for the severity of the vulnerability.
        /// The value range is 0 to 5, with 5 being the highest severity.
        /// </summary>
        [JsonProperty(PropertyName = "severity")]
        public long? Severity { get; set; }

        /// <summary>
        /// Gets or sets common Weakness Enumration (CWE) ID for the
        /// vulnerability.
        /// </summary>
        [JsonProperty(PropertyName = "cwe_id")]
        public string CweId { get; set; }

        /// <summary>
        /// Gets or sets date when Veracode first discovered the vulnerability.
        /// </summary>
        [JsonProperty(PropertyName = "first_found_date")]
        public string FirstFoundDate { get; set; }

        /// <summary>
        /// Gets or sets CVE summary for the vulnerability.
        /// </summary>
        [JsonProperty(PropertyName = "cve_summary")]
        public string CveSummary { get; set; }

        /// <summary>
        /// Gets or sets severity description for the vulnerbseverity.
        /// </summary>
        [JsonProperty(PropertyName = "severity_desc")]
        public string SeverityDesc { get; set; }

        /// <summary>
        /// Gets or sets vulnerability mitigation status.
        /// </summary>
        [JsonProperty(PropertyName = "mitigation")]
        public string Mitigation { get; set; }

        /// <summary>
        /// Gets or sets type of mitigation applied to the vulnerability, if
        /// any.
        /// </summary>
        [JsonProperty(PropertyName = "mitigation_type")]
        public string MitigationType { get; set; }

        /// <summary>
        /// Gets or sets mitigation date for teh vulnerability.
        /// </summary>
        [JsonProperty(PropertyName = "mitigated_date")]
        public string MitigatedDate { get; set; }

        /// <summary>
        /// Gets or sets whether the vulnerability affects SCA policy
        /// compliance.
        /// </summary>
        [JsonProperty(PropertyName = "vulnerability_affects_policy_compliance")]
        public string VulnerabilityAffectsPolicyCompliance { get; set; }

    }
}
