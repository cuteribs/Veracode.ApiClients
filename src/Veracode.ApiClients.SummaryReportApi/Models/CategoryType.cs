// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Veracode.ApiClients.SummaryReportApi.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Category Type
    /// </summary>
    public partial class CategoryType
    {
        /// <summary>
        /// Initializes a new instance of the CategoryType class.
        /// </summary>
        public CategoryType()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CategoryType class.
        /// </summary>
        /// <param name="categoryName">Name of the severity category.</param>
        /// <param name="severity">Possible values include: 'Informational',
        /// 'Very Low', 'Low', 'Medium', 'High', 'Very High'</param>
        /// <param name="count">Number of findings in this category.</param>
        public CategoryType(string categoryName = default(string), string severity = default(string), long? count = default(long?))
        {
            CategoryName = categoryName;
            Severity = severity;
            Count = count;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets name of the severity category.
        /// </summary>
        [JsonProperty(PropertyName = "category_name")]
        public string CategoryName { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Informational', 'Very Low',
        /// 'Low', 'Medium', 'High', 'Very High'
        /// </summary>
        [JsonProperty(PropertyName = "severity")]
        public string Severity { get; set; }

        /// <summary>
        /// Gets or sets number of findings in this category.
        /// </summary>
        [JsonProperty(PropertyName = "count")]
        public long? Count { get; set; }

    }
}
