// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Veracode.ApiClients.IdentityApi
{
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for GetUserUsingGET.
    /// </summary>
    public static partial class GetUserUsingGETExtensions
    {
            /// <summary>
            /// Get a single user.
            /// </summary>
            /// <remarks>
            /// Gets details of the specific user ID provided as a path variable.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='userId'>
            /// The user ID.
            /// </param>
            public static ResourceOfUserResource One(this IGetUserUsingGET operations, string userId)
            {
                return operations.OneAsync(userId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get a single user.
            /// </summary>
            /// <remarks>
            /// Gets details of the specific user ID provided as a path variable.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='userId'>
            /// The user ID.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ResourceOfUserResource> OneAsync(this IGetUserUsingGET operations, string userId, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.OneWithHttpMessagesAsync(userId, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
