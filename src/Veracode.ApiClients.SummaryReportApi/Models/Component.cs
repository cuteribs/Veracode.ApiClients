// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Veracode.ApiClients.SummaryReportApi.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Component
    /// </summary>
    public partial class Component
    {
        /// <summary>
        /// Initializes a new instance of the Component class.
        /// </summary>
        public Component()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Component class.
        /// </summary>
        /// <param name="componentId">ID of the component.</param>
        /// <param name="fileName">Filename of the component.</param>
        /// <param name="sha1">sha1</param>
        /// <param name="vulnerability">Number of vulnerabilities that Veracode
        /// discovered in the component.</param>
        /// <param name="maxCvssScore">Max Common Vulnerability Scoring System
        /// (CVSS) of the component. See cvss_score.</param>
        /// <param name="library">Library name of the component.</param>
        /// <param name="version">Version of the component.</param>
        /// <param name="vendor">Vendor name of the component.</param>
        /// <param name="description">Description of the component.</param>
        /// <param name="blacklisted">Blacklisted status for the
        /// component.</param>
        /// <param name="_new">Whether this is a newly-added component.</param>
        /// <param name="addedDate">Date when you added the component.</param>
        /// <param name="componentAffectsPolicyCompliance">Whether the
        /// component violates the SCA policy.</param>
        public Component(FilePathList filePaths = default(FilePathList), LicenseList licenses = default(LicenseList), VulnerabilityList vulnerabilities = default(VulnerabilityList), ViolatedRuleList violatedPolicyRules = default(ViolatedRuleList), string componentId = default(string), string fileName = default(string), string sha1 = default(string), long? vulnerability = default(long?), string maxCvssScore = default(string), string library = default(string), string version = default(string), string vendor = default(string), string description = default(string), string blacklisted = default(string), string _new = default(string), string addedDate = default(string), string componentAffectsPolicyCompliance = default(string))
        {
            FilePaths = filePaths;
            Licenses = licenses;
            Vulnerabilities = vulnerabilities;
            ViolatedPolicyRules = violatedPolicyRules;
            ComponentId = componentId;
            FileName = fileName;
            Sha1 = sha1;
            Vulnerability = vulnerability;
            MaxCvssScore = maxCvssScore;
            Library = library;
            Version = version;
            Vendor = vendor;
            Description = description;
            Blacklisted = blacklisted;
            this._new = _new;
            AddedDate = addedDate;
            ComponentAffectsPolicyCompliance = componentAffectsPolicyCompliance;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "file_paths")]
        public FilePathList FilePaths { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "licenses")]
        public LicenseList Licenses { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "vulnerabilities")]
        public VulnerabilityList Vulnerabilities { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "violated_policy_rules")]
        public ViolatedRuleList ViolatedPolicyRules { get; set; }

        /// <summary>
        /// Gets or sets ID of the component.
        /// </summary>
        [JsonProperty(PropertyName = "component_id")]
        public string ComponentId { get; set; }

        /// <summary>
        /// Gets or sets filename of the component.
        /// </summary>
        [JsonProperty(PropertyName = "file_name")]
        public string FileName { get; set; }

        /// <summary>
        /// Gets or sets sha1
        /// </summary>
        [JsonProperty(PropertyName = "sha1")]
        public string Sha1 { get; set; }

        /// <summary>
        /// Gets or sets number of vulnerabilities that Veracode discovered in
        /// the component.
        /// </summary>
        [JsonProperty(PropertyName = "vulnerability")]
        public long? Vulnerability { get; set; }

        /// <summary>
        /// Gets or sets max Common Vulnerability Scoring System (CVSS) of the
        /// component. See cvss_score.
        /// </summary>
        [JsonProperty(PropertyName = "max_cvss_score")]
        public string MaxCvssScore { get; set; }

        /// <summary>
        /// Gets or sets library name of the component.
        /// </summary>
        [JsonProperty(PropertyName = "library")]
        public string Library { get; set; }

        /// <summary>
        /// Gets or sets version of the component.
        /// </summary>
        [JsonProperty(PropertyName = "version")]
        public string Version { get; set; }

        /// <summary>
        /// Gets or sets vendor name of the component.
        /// </summary>
        [JsonProperty(PropertyName = "vendor")]
        public string Vendor { get; set; }

        /// <summary>
        /// Gets or sets description of the component.
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets blacklisted status for the component.
        /// </summary>
        [JsonProperty(PropertyName = "blacklisted")]
        public string Blacklisted { get; set; }

        /// <summary>
        /// Gets or sets whether this is a newly-added component.
        /// </summary>
        [JsonProperty(PropertyName = "_new")]
        public string _new { get; set; }

        /// <summary>
        /// Gets or sets date when you added the component.
        /// </summary>
        [JsonProperty(PropertyName = "added_date")]
        public string AddedDate { get; set; }

        /// <summary>
        /// Gets or sets whether the component violates the SCA policy.
        /// </summary>
        [JsonProperty(PropertyName = "component_affects_policy_compliance")]
        public string ComponentAffectsPolicyCompliance { get; set; }

    }
}
