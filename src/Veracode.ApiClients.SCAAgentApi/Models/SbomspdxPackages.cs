// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Veracode.ApiClients.SCAAgent.Api.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class SbomspdxPackages
    {
        /// <summary>
        /// Initializes a new instance of the SbomspdxPackages class.
        /// </summary>
        public SbomspdxPackages()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SbomspdxPackages class.
        /// </summary>
        /// <param name="sPDXID">Identifier for library package in SPDX
        /// document. This identifier will be used in relationship as the
        /// reference identifier</param>
        /// <param name="description">Description of the library. Library
        /// coordinates will be used as description</param>
        /// <param name="downloadLocation">URL to download the libary
        /// artifacts</param>
        /// <param name="filesAnalyzed">Whether the file content of this
        /// package has been available for or subjected to analysis when
        /// creating the SPDX document. It is false in Veracode SPDX
        /// document</param>
        /// <param name="homepage">Library provider homepage</param>
        /// <param name="licenseConcluded">Contain the license the SPDX
        /// document creator has concluded as governing the package or
        /// alternative values, if the governing license cannot be determined.
        /// It will be the same as licenseDeclared.</param>
        /// <param name="licenseDeclared">List the licenses that have been
        /// declared by the authors of the package.</param>
        /// <param name="licenseInfoFromFiles">This field is to contain a list
        /// of all licenses found for the library.</param>
        /// <param name="name">full name of the library as given by the library
        /// provider</param>
        /// <param name="packageFileName">Library file path and name</param>
        /// <param name="releaseDate">Library release date</param>
        /// <param name="versionInfo">Library version</param>
        /// <param name="externalRefs">List of vulnerabilities affects the
        /// library. Each vulnerability is wrapped in a json string. json
        /// schema refer to spdx vulnerability object</param>
        public SbomspdxPackages(string sPDXID = default(string), string description = default(string), string downloadLocation = default(string), bool? filesAnalyzed = default(bool?), string homepage = default(string), string licenseConcluded = default(string), string licenseDeclared = default(string), IList<string> licenseInfoFromFiles = default(IList<string>), string name = default(string), string packageFileName = default(string), System.DateTime? releaseDate = default(System.DateTime?), string versionInfo = default(string), IList<SbomspdxExternalRefs> externalRefs = default(IList<SbomspdxExternalRefs>))
        {
            SPDXID = sPDXID;
            Description = description;
            DownloadLocation = downloadLocation;
            FilesAnalyzed = filesAnalyzed;
            Homepage = homepage;
            LicenseConcluded = licenseConcluded;
            LicenseDeclared = licenseDeclared;
            LicenseInfoFromFiles = licenseInfoFromFiles;
            Name = name;
            PackageFileName = packageFileName;
            ReleaseDate = releaseDate;
            VersionInfo = versionInfo;
            ExternalRefs = externalRefs;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets identifier for library package in SPDX document. This
        /// identifier will be used in relationship as the reference identifier
        /// </summary>
        [JsonProperty(PropertyName = "SPDXID")]
        public string SPDXID { get; set; }

        /// <summary>
        /// Gets or sets description of the library. Library coordinates will
        /// be used as description
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets URL to download the libary artifacts
        /// </summary>
        [JsonProperty(PropertyName = "downloadLocation")]
        public string DownloadLocation { get; set; }

        /// <summary>
        /// Gets or sets whether the file content of this package has been
        /// available for or subjected to analysis when creating the SPDX
        /// document. It is false in Veracode SPDX document
        /// </summary>
        [JsonProperty(PropertyName = "filesAnalyzed")]
        public bool? FilesAnalyzed { get; set; }

        /// <summary>
        /// Gets or sets library provider homepage
        /// </summary>
        [JsonProperty(PropertyName = "homepage")]
        public string Homepage { get; set; }

        /// <summary>
        /// Gets or sets contain the license the SPDX document creator has
        /// concluded as governing the package or alternative values, if the
        /// governing license cannot be determined. It will be the same as
        /// licenseDeclared.
        /// </summary>
        [JsonProperty(PropertyName = "licenseConcluded")]
        public string LicenseConcluded { get; set; }

        /// <summary>
        /// Gets or sets list the licenses that have been declared by the
        /// authors of the package.
        /// </summary>
        [JsonProperty(PropertyName = "licenseDeclared")]
        public string LicenseDeclared { get; set; }

        /// <summary>
        /// Gets or sets this field is to contain a list of all licenses found
        /// for the library.
        /// </summary>
        [JsonProperty(PropertyName = "licenseInfoFromFiles")]
        public IList<string> LicenseInfoFromFiles { get; set; }

        /// <summary>
        /// Gets or sets full name of the library as given by the library
        /// provider
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets library file path and name
        /// </summary>
        [JsonProperty(PropertyName = "packageFileName")]
        public string PackageFileName { get; set; }

        /// <summary>
        /// Gets or sets library release date
        /// </summary>
        [JsonProperty(PropertyName = "releaseDate")]
        public System.DateTime? ReleaseDate { get; set; }

        /// <summary>
        /// Gets or sets library version
        /// </summary>
        [JsonProperty(PropertyName = "versionInfo")]
        public string VersionInfo { get; set; }

        /// <summary>
        /// Gets or sets list of vulnerabilities affects the library. Each
        /// vulnerability is wrapped in a json string. json schema refer to
        /// spdx vulnerability object
        /// </summary>
        [JsonProperty(PropertyName = "externalRefs")]
        public IList<SbomspdxExternalRefs> ExternalRefs { get; set; }

    }
}
