// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Veracode.ApiClients.DynamicFlawApi
{
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for DynamicFlawApiClient.
    /// </summary>
    public static partial class DynamicFlawApiClientExtensions
    {
            /// <summary>
            /// Returns information on a specific dynamic flaw.
            /// </summary>
            /// <remarks>
            /// Returns detailed information about a single dynamic flaw, including the
            /// CWE, description, recommendation, and associated HTTP requests.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='appGuid'>
            /// GUID for the application.
            /// </param>
            /// <param name='issueId'>
            /// Unique issue ID for the scanned application.
            /// </param>
            public static object GetDynamicFlawInfo(this IDynamicFlawApiClient operations, string appGuid, string issueId)
            {
                return operations.GetDynamicFlawInfoAsync(appGuid, issueId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Returns information on a specific dynamic flaw.
            /// </summary>
            /// <remarks>
            /// Returns detailed information about a single dynamic flaw, including the
            /// CWE, description, recommendation, and associated HTTP requests.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='appGuid'>
            /// GUID for the application.
            /// </param>
            /// <param name='issueId'>
            /// Unique issue ID for the scanned application.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> GetDynamicFlawInfoAsync(this IDynamicFlawApiClient operations, string appGuid, string issueId, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetDynamicFlawInfoWithHttpMessagesAsync(appGuid, issueId, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
