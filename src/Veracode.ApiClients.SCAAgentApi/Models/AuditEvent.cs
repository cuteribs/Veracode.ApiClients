// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Veracode.ApiClients.SCAAgentApi.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// AuditEvent
    /// </summary>
    public partial class AuditEvent
    {
        /// <summary>
        /// Initializes a new instance of the AuditEvent class.
        /// </summary>
        public AuditEvent()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AuditEvent class.
        /// </summary>
        /// <param name="actor">Current username of the actor who invoked the
        /// event. For auditing, check the Veracode Platform user activity log
        /// for username changes or, if you cannot find the information you
        /// need, contact Veracode Technical Support. If null, a Veracode
        /// internal system invoked the event.</param>
        /// <param name="date">Date the audit event was created on.</param>
        /// <param name="eventGroup">Event group for the audit event.</param>
        /// <param name="eventType">Event type for the audit event</param>
        /// <param name="id">Audit event identifier.</param>
        /// <param name="reason">The reason for the audit event.</param>
        /// <param name="sourceIp">Source IP the audit event happened
        /// on.</param>
        /// <param name="targetAgent">Target agent of the audit event.</param>
        /// <param name="targetProject">Target project of the audit
        /// event.</param>
        /// <param name="targetWorkspace">Target workspace of the audit
        /// event.</param>
        public AuditEvent(IList<Link> _links = default(IList<Link>), string actor = default(string), System.DateTime? date = default(System.DateTime?), string eventGroup = default(string), string eventType = default(string), System.Guid? id = default(System.Guid?), string reason = default(string), string sourceIp = default(string), string targetAgent = default(string), string targetProject = default(string), string targetWorkspace = default(string))
        {
            this._links = _links;
            Actor = actor;
            Date = date;
            EventGroup = eventGroup;
            EventType = eventType;
            Id = id;
            Reason = reason;
            SourceIp = sourceIp;
            TargetAgent = targetAgent;
            TargetProject = targetProject;
            TargetWorkspace = targetWorkspace;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_links")]
        public IList<Link> _links { get; set; }

        /// <summary>
        /// Gets or sets current username of the actor who invoked the event.
        /// For auditing, check the Veracode Platform user activity log for
        /// username changes or, if you cannot find the information you need,
        /// contact Veracode Technical Support. If null, a Veracode internal
        /// system invoked the event.
        /// </summary>
        [JsonProperty(PropertyName = "actor")]
        public string Actor { get; set; }

        /// <summary>
        /// Gets or sets date the audit event was created on.
        /// </summary>
        [JsonProperty(PropertyName = "date")]
        public System.DateTime? Date { get; set; }

        /// <summary>
        /// Gets or sets event group for the audit event.
        /// </summary>
        [JsonProperty(PropertyName = "event_group")]
        public string EventGroup { get; set; }

        /// <summary>
        /// Gets or sets event type for the audit event
        /// </summary>
        [JsonProperty(PropertyName = "event_type")]
        public string EventType { get; set; }

        /// <summary>
        /// Gets or sets audit event identifier.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public System.Guid? Id { get; set; }

        /// <summary>
        /// Gets or sets the reason for the audit event.
        /// </summary>
        [JsonProperty(PropertyName = "reason")]
        public string Reason { get; set; }

        /// <summary>
        /// Gets or sets source IP the audit event happened on.
        /// </summary>
        [JsonProperty(PropertyName = "source_ip")]
        public string SourceIp { get; set; }

        /// <summary>
        /// Gets or sets target agent of the audit event.
        /// </summary>
        [JsonProperty(PropertyName = "target_agent")]
        public string TargetAgent { get; set; }

        /// <summary>
        /// Gets or sets target project of the audit event.
        /// </summary>
        [JsonProperty(PropertyName = "target_project")]
        public string TargetProject { get; set; }

        /// <summary>
        /// Gets or sets target workspace of the audit event.
        /// </summary>
        [JsonProperty(PropertyName = "target_workspace")]
        public string TargetWorkspace { get; set; }

    }
}
