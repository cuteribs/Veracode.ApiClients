{
  "swagger": "2.0",
  "info": {
    "description": "Veracode SCA Agent API Documentation.\n\nIf using SourceClear API credentials, use the default host URL: api.sourceclear.io/srcclr.\n\nIf using Veracode credentials, use one of the following base URLs depending on the region for your account:\n* https://api.veracode.com/srcclr - Veracode US Region (default)\n* https://api.veracode.eu/srcclr - Veracode European Region\n* https://api.veracode.us/srcclr - Veracode US Federal Region",
    "version": "3.0",
    "title": "Veracode SCA Agent API Specification"
  },
  "host": "api.veracode.com",
  "basePath": "/srcclr",
  "tags": [
    {
      "name": "agents",
      "description": "Agent operations."
    },
    {
      "name": "issues",
      "description": "Issue operations."
    },
    {
      "name": "registry",
      "description": "Registry operations."
    },
    {
      "name": "scans",
      "description": "Scan operations."
    },
    {
      "name": "team",
      "description": "Team operations."
    },
    {
      "name": "workspaces",
      "description": "Operations of projects in agent-based scan workspaces."
    },
    {
      "name": "sbom",
      "description": "Application SBOM data"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v3/events": {
      "get": {
        "tags": [
          "events"
        ],
        "summary": "AuditEvents for the organization.",
        "description": "Get audit events for your organization.",
        "operationId": "getAuditUsingGET",
        "parameters": [
          {
            "name": "date_gte",
            "in": "query",
            "description": "Filter by events occurring on or after the specified date.",
            "required": false,
            "type": "string",
            "format": "date-time",
            "allowEmptyValue": false
          },
          {
            "name": "group",
            "in": "query",
            "description": "Filter by event group.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "Results page you want to retrieve (0..N).",
            "required": false,
            "type": "integer",
            "exclusiveMaximum": false,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Number of records per page.",
            "required": false,
            "type": "integer",
            "maximum": 2000,
            "exclusiveMaximum": false,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filter by event type.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "deprecated": false,
        "responses": {
          "200": {
            "description": "You have successfully submitted your request.",
            "schema": {
              "$ref": "#/definitions/PagedResources%C2%ABAuditEvent%C2%BB"
            }
          }
        }
      }
    },
    "/v3/issues/{id}": {
      "get": {
        "tags": [
          "issues"
        ],
        "summary": "getIssue",
        "operationId": "getIssueUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Issue ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "deprecated": false,
        "responses": {
          "200": {
            "description": "You have successfully submitted your request.",
            "schema": {
              "$ref": "#/definitions/IssueDetailed"
            }
          }
        }
      }
    },
    "/v3/libraries/{id}": {
      "get": {
        "tags": [
          "registry"
        ],
        "summary": "getLibrary",
        "operationId": "getLibraryUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Library instance reference ID. <br/> ID values have this format: coordinateType:coordinate1:coordinate2:version:platform <br/> Example: maven:net.minidev:json-smart:1.3.1:",
            "required": true,
            "type": "string"
          }
        ],
        "deprecated": false,
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LibraryDetailed"
            }
          }
        }
      }
    },
    "/v3/licenses/{id}": {
      "get": {
        "tags": [
          "registry"
        ],
        "summary": "getLicense",
        "operationId": "getLicenseUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "License ID.",
            "required": true,
            "type": "string"
          }
        ],
        "deprecated": false,
        "responses": {
          "200": {
            "description": "You have successfully submitted your request.",
            "schema": {
              "$ref": "#/definitions/LicenseDetailed"
            }
          }
        }
      }
    },
    "/v3/component-activity/{id}": {
      "get": {
        "tags": [
          "registry"
        ],
        "summary": "getComponentActivity",
        "operationId": "getComponentActivityUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Library instance reference ID. <br/> ID values have this format: coordinateType:coordinate1:coordinate2:version:platform <br/> Example: maven:net.minidev:json-smart:1.3.1:",
            "required": true,
            "type": "string"
          }
        ],
        "deprecated": false,
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ComponentMetricsModel"
            }
          }
        }
      }
    },
    "/v3/scans/{id}": {
      "get": {
        "tags": [
          "scans"
        ],
        "summary": "getScan",
        "operationId": "getScanUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Scan ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "deprecated": false,
        "responses": {
          "200": {
            "description": "You have successfully submitted your request.",
            "schema": {
              "$ref": "#/definitions/Scan"
            }
          }
        }
      }
    },
    "/v3/teams": {
      "get": {
        "tags": [
          "team"
        ],
        "summary": "getTeams",
        "description": "Get all teams for an account.",
        "operationId": "getTeamsUsingGET",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Filter by team name.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page of results that you want to retrieve (0..N).",
            "required": false,
            "type": "integer",
            "exclusiveMaximum": false,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "description": "The number of records per page.",
            "required": false,
            "type": "integer",
            "maximum": 2000,
            "exclusiveMaximum": false,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property(asc|desc). The default order is name ascending.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "id",
                "name"
              ]
            },
            "collectionFormat": "multi"
          }
        ],
        "deprecated": false,
        "responses": {
          "200": {
            "description": "You have successfully submitted your request.",
            "schema": {
              "$ref": "#/definitions/Resources%C2%ABTeam%C2%BB"
            }
          }
        }
      }
    },
    "/v3/teams/{id}": {
      "get": {
        "tags": [
          "team"
        ],
        "summary": "getTeam",
        "description": "Get team information with the given team id.",
        "operationId": "getTeamUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Team ID.",
            "required": true,
            "type": "string",
            "x-example": "0"
          }
        ],
        "deprecated": false,
        "responses": {
          "200": {
            "description": "You have successfully submitted your request.",
            "schema": {
              "$ref": "#/definitions/Team"
            }
          }
        }
      }
    },
    "/v3/vulnerabilities/{id}": {
      "get": {
        "tags": [
          "registry"
        ],
        "summary": "getVulnerability",
        "operationId": "getVulnerabilityUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Vulnerability ID.",
            "required": true,
            "type": "string"
          }
        ],
        "deprecated": false,
        "responses": {
          "200": {
            "description": "You have successfully submitted your request.",
            "schema": {
              "$ref": "#/definitions/VulnerabilityDetailed"
            }
          }
        }
      }
    },
    "/v3/workspaces": {
      "get": {
        "tags": [
          "workspaces"
        ],
        "summary": "getWorkspaces",
        "description": "Get visible workspaces. Workspace visibility depends on workspace membership and user permissions.",
        "operationId": "getWorkspacesUsingGET",
        "parameters": [
          {
            "name": "filter[library]",
            "in": "query",
            "description": "The library name filter.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filter[license]",
            "in": "query",
            "description": "The license name filter.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filter[project]",
            "in": "query",
            "description": "The project name filter.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filter[vulnerability]",
            "in": "query",
            "description": "The vulnerability title filter.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filter[workspace]",
            "in": "query",
            "description": "The workspace name filter.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page of results that you want to retrieve (0..N).",
            "required": false,
            "type": "integer",
            "exclusiveMaximum": false,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "description": "The number of records per page.",
            "required": false,
            "type": "integer",
            "maximum": 2000,
            "exclusiveMaximum": false,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property(asc|desc). The default order is ascending.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "name"
              ]
            },
            "collectionFormat": "multi"
          }
        ],
        "deprecated": false,
        "responses": {
          "200": {
            "description": "You have successfully submitted your request.",
            "schema": {
              "$ref": "#/definitions/PagedResources%C2%ABWorkspace%C2%BB"
            }
          }
        }
      },
      "post": {
        "tags": [
          "workspaces"
        ],
        "summary": "createWorkspace",
        "description": "Create a workspace using the workspace TeamInputModel.",
        "operationId": "createWorkspaceUsingPOST",
        "parameters": [
          {
            "in": "body",
            "name": "inputModel",
            "description": "Team model containing the team name, description, and memberships.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateWorkspaceModel"
            }
          }
        ],
        "deprecated": false,
        "responses": {
          "200": {
            "description": "You have successfully submitted your request.",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          }
        }
      }
    },
    "/v3/workspaces/{id}": {
      "get": {
        "tags": [
          "workspaces"
        ],
        "summary": "getWorkspace",
        "description": "Get single workspace.",
        "operationId": "getWorkspaceUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Workspace ID.",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-example": "00000000-0000-0000-0000-000000000000"
          }
        ],
        "deprecated": false,
        "responses": {
          "200": {
            "description": "You have successfully submitted your request.",
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "workspaces"
        ],
        "summary": "deleteWorkspace",
        "description": "Delete workspace.",
        "operationId": "deleteWorkspaceUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Workspace ID.",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-example": "00000000-0000-0000-0000-000000000000"
          }
        ],
        "deprecated": false,
        "responses": {
          "200": {
            "description": "You have successfully submitted your request.",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v3/workspaces/{id}/issues": {
      "get": {
        "tags": [
          "workspaces"
        ],
        "summary": "getIssues",
        "description": "Get issues for the given workspace. Note: If a project Default Branch is set or a branch name is given, only issues from scans of that branch are displayed.",
        "operationId": "getIssuesUsingGET",
        "parameters": [
          {
            "name": "branch",
            "in": "query",
            "description": "Filter by branch name.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "created_after",
            "in": "query",
            "description": "Filter by issues created on or after the specified date.",
            "required": false,
            "type": "string",
            "format": "date-time",
            "allowEmptyValue": false
          },
          {
            "name": "created_before",
            "in": "query",
            "description": "Filter by issues created on or before the specified date.",
            "required": false,
            "type": "string",
            "format": "date-time",
            "allowEmptyValue": false
          },
          {
            "name": "direct",
            "in": "query",
            "description": "Filter by direct dependency.",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": false
          },
          {
            "name": "id",
            "in": "path",
            "description": "Workspace ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "ignored",
            "in": "query",
            "description": "If true, show only ignored issues.",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "Results page you want to retrieve (0..N).",
            "required": false,
            "type": "integer",
            "exclusiveMaximum": false,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32"
          },
          {
            "name": "project_id",
            "in": "query",
            "description": "Filter 0 or more project IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "collectionFormat": "multi",
            "allowEmptyValue": false
          },
          {
            "name": "scans_after",
            "in": "query",
            "description": "Filter by issues last seen in scans on or after the specified scan date.",
            "required": false,
            "type": "string",
            "format": "date-time",
            "allowEmptyValue": false
          },
          {
            "name": "scans_before",
            "in": "query",
            "description": "Filter by issues last seen in scans on or before the specified scan date.",
            "required": false,
            "type": "string",
            "format": "date-time",
            "allowEmptyValue": false
          },
          {
            "name": "search",
            "in": "query",
            "description": "Filter by issues matching the provided text search.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "severity_gt",
            "in": "query",
            "description": "Filter by issue severity greater than the provided value.",
            "required": false,
            "type": "number",
            "format": "float",
            "allowEmptyValue": false
          },
          {
            "name": "severity_gte",
            "in": "query",
            "description": "Filter by issue severity greater than or equal to the provided value.",
            "required": false,
            "type": "number",
            "format": "float",
            "allowEmptyValue": false
          },
          {
            "name": "severity_lt",
            "in": "query",
            "description": "Filter by issue severity less than the provided value.",
            "required": false,
            "type": "number",
            "format": "float",
            "allowEmptyValue": false
          },
          {
            "name": "severity_lte",
            "in": "query",
            "description": "Filter by issue severity less than or equal to the provided value.",
            "required": false,
            "type": "number",
            "format": "float",
            "allowEmptyValue": false
          },
          {
            "name": "size",
            "in": "query",
            "description": "Number of records per page.",
            "required": false,
            "type": "integer",
            "maximum": 2000,
            "exclusiveMaximum": false,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property(,asc|desc). Default order is created date descending.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "severity",
                "created_date"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by issue status.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "open",
                "fixed"
              ]
            },
            "collectionFormat": "multi",
            "default": "open",
            "allowEmptyValue": false
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filter by issue type.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "allowEmptyValue": false
          },
          {
            "name": "vuln_methods",
            "in": "query",
            "description": "Filter by vulnerable methods.",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": false
          }
        ],
        "deprecated": false,
        "responses": {
          "200": {
            "description": "You have successfully submitted your request.",
            "schema": {
              "$ref": "#/definitions/PagedResources%C2%ABIssueSummary%C2%BB"
            }
          }
        }
      }
    },
    "/v3/workspaces/{id}/libraries": {
      "get": {
        "tags": [
          "workspaces"
        ],
        "summary": "getLibraries",
        "description": "Get libraries for the given workspace.",
        "operationId": "getLibrariesUsingGET",
        "parameters": [
          {
            "name": "direct",
            "in": "query",
            "description": "Filter by direct dependencies only, false will filter by indirect dependencies.",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": false
          },
          {
            "name": "has_vulnerabilities",
            "in": "query",
            "description": "Filter by libraries with vulnerabilities only. If false, filter by libraries with no vulnerabilities.",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": false
          },
          {
            "name": "id",
            "in": "path",
            "description": "Workspace ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "out_of_date",
            "in": "query",
            "description": "Filter by out-of-date libraries only. If false, filter by up-to-date libraries.",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "Results page you want to retrieve (0..N).",
            "required": false,
            "type": "integer",
            "exclusiveMaximum": false,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Filter by library names matching the provided text search.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "size",
            "in": "query",
            "description": "Number of records per page.",
            "required": false,
            "type": "integer",
            "maximum": 2000,
            "exclusiveMaximum": false,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property(asc|desc). Default order is name ascending.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "name"
              ]
            },
            "collectionFormat": "multi"
          }
        ],
        "deprecated": false,
        "responses": {
          "200": {
            "description": "You have successfully submitted your request.",
            "schema": {
              "$ref": "#/definitions/PagedResources%C2%ABLibrarySummary%C2%BB"
            }
          }
        }
      }
    },
    "/v3/workspaces/{id}/libraries/unmatched": {
      "get": {
        "tags": [
          "workspaces"
        ],
        "summary": "getUnmatchedLibraries",
        "description": "Get unmatched libraries for the given workspace.",
        "operationId": "getUnmatchedLibrariesUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Workspace ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Results page you want to retrieve (0..N).",
            "required": false,
            "type": "integer",
            "exclusiveMaximum": false,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Filter by unmatched library names matching the provided text search.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "size",
            "in": "query",
            "description": "Number of records per page.",
            "required": false,
            "type": "integer",
            "maximum": 2000,
            "exclusiveMaximum": false,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property(asc|desc). Default order is name ascending.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "name"
              ]
            },
            "collectionFormat": "multi"
          }
        ],
        "deprecated": false,
        "responses": {
          "200": {
            "description": "You have successfully submitted your request.",
            "schema": {
              "$ref": "#/definitions/PagedResources%C2%ABUnmatchedLibraryReportResource%C2%BB"
            }
          }
        }
      }
    },
    "/v3/workspaces/{id}/projects": {
      "get": {
        "tags": [
          "workspaces"
        ],
        "summary": "getWorkspaceProjects",
        "description": "Get workspace projects.",
        "operationId": "getWorkspaceProjectsUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Workspace ID.",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-example": "00000000-0000-0000-0000-000000000000"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page of results that you want to retrieve (0..N).",
            "required": false,
            "type": "integer",
            "exclusiveMaximum": false,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32"
          },
          {
            "name": "search",
            "in": "query",
            "description": "The Project name filter.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "size",
            "in": "query",
            "description": "The number of records per page.",
            "required": false,
            "type": "integer",
            "maximum": 2000,
            "exclusiveMaximum": false,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property(asc|desc). The default order is name ascending.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "name"
              ]
            },
            "collectionFormat": "multi"
          }
        ],
        "deprecated": false,
        "responses": {
          "200": {
            "description": "You have successfully submitted your request.",
            "schema": {
              "$ref": "#/definitions/PagedResources%C2%ABProject%C2%BB"
            }
          }
        }
      }
    },
    "/v3/workspaces/{id}/projects/{projectId}": {
      "get": {
        "tags": [
          "workspaces"
        ],
        "summary": "getProjects",
        "description": "Get single project in an agent-based scan workspace.",
        "operationId": "getProjectsUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Workspace ID.",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-example": "00000000-0000-0000-0000-000000000000"
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "Project ID.",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-example": "00000000-0000-0000-0000-000000000000"
          }
        ],
        "deprecated": false,
        "responses": {
          "200": {
            "description": "You have successfully submitted your request.",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        }
      }
    },
    "/v3/workspaces/{id}/projects/{projectId}/issues": {
      "get": {
        "tags": [
          "workspaces"
        ],
        "summary": "getProjectIssues",
        "description": "Get issues from a project in an agent-based scan workspace, including the linked container project.",
        "operationId": "getProjectIssuesUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Workspace ID.",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-example": "00000000-0000-0000-0000-000000000000"
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "Project ID.",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-example": "00000000-0000-0000-0000-000000000000"
          },
          {
            "name": "linked_projects",
            "in": "query",
            "description": "Request issues from linked projects.",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": false
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by issue status.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "open",
                "fixed"
              ]
            },
            "collectionFormat": "multi",
            "default": "open"
          }
        ],
        "deprecated": false,
        "responses": {
          "200": {
            "description": "You have successfully submitted your request.",
            "schema": {
              "$ref": "#/definitions/PagedResources%C2%ABIssueSummary%C2%BB"
            }
          }
        }
      }
    },
    "/v3/workspaces/{id}/projects/{projectId}/libraries": {
      "get": {
        "tags": [
          "workspaces"
        ],
        "summary": "getProjectLibraries",
        "description": "Get libraries from a project in an agent-based scan workspace.",
        "operationId": "getProjectLibrariesUsingGET",
        "parameters": [
          {
            "name": "direct",
            "in": "query",
            "description": "Filter by direct dependencies only. If false, filter by indirect dependencies only.",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": false
          },
          {
            "name": "has_vulnerabilities",
            "in": "query",
            "description": "Filter by libraries with vulnerabilities only. If false, filter by libraries with no vulnerabilities.",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": false
          },
          {
            "name": "id",
            "in": "path",
            "description": "Workspace ID.",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-example": "00000000-0000-0000-0000-000000000000"
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "Project ID.",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-example": "00000000-0000-0000-0000-000000000000"
          },
          {
            "name": "out_of_date",
            "in": "query",
            "description": "Filter by out-of-date libraries only. If false, filter by up-to-date libraries only.",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "Results page you want to retrieve (0..N).",
            "required": false,
            "type": "integer",
            "exclusiveMaximum": false,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Filter by library names matching the provided text search.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "size",
            "in": "query",
            "description": "Number of records per page.",
            "required": false,
            "type": "integer",
            "maximum": 2000,
            "exclusiveMaximum": false,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property(asc|desc). Default order is name ascending.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "name"
              ]
            },
            "collectionFormat": "multi"
          }
        ],
        "deprecated": false,
        "responses": {
          "200": {
            "description": "You have successfully submitted your request.",
            "schema": {
              "$ref": "#/definitions/PagedResources%C2%ABLibrarySummary%C2%BB"
            }
          }
        }
      }
    },
    "/v3/workspaces/{id}/teams": {
      "get": {
        "tags": [
          "workspaces"
        ],
        "summary": "getTeams",
        "description": "Get teams in a workspace.",
        "operationId": "getTeamsUsingGET_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Workspace ID.",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-example": "00000000-0000-0000-0000-000000000000"
          }
        ],
        "deprecated": false,
        "responses": {
          "200": {
            "description": "You have successfully submitted your request.",
            "schema": {
              "$ref": "#/definitions/Resources%C2%ABTeam%C2%BB"
            }
          }
        }
      }
    },
    "/v3/workspaces/{id}/teams/{teamId}": {
      "put": {
        "tags": [
          "workspaces"
        ],
        "summary": "addTeam",
        "description": "Add teams to a workspace.",
        "operationId": "addTeamUsingPUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Workspace ID.",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-example": "00000000-0000-0000-0000-000000000000"
          },
          {
            "name": "teamId",
            "in": "path",
            "description": "Team ID.",
            "required": true,
            "type": "string",
            "x-example": "1"
          }
        ],
        "deprecated": false,
        "responses": {
          "200": {
            "description": "You have successfully submitted your request.",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "workspaces"
        ],
        "summary": "deleteTeam",
        "description": "Remove teams from a workspace.",
        "operationId": "deleteTeamUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Workspace ID.",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-example": "00000000-0000-0000-0000-000000000000"
          },
          {
            "name": "teamId",
            "in": "path",
            "description": "Team ID.",
            "required": true,
            "type": "string",
            "x-example": "1"
          }
        ],
        "deprecated": false,
        "responses": {
          "200": {
            "description": "You have successfully submitted your request.",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "You have successfully removed teams from a workspace.",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v3/workspaces/{workspaceId}/agents": {
      "get": {
        "tags": [
          "agents"
        ],
        "summary": "getWorkspaceAgents",
        "description": "Get a list of agents tied to the given workspace.",
        "operationId": "getWorkspaceAgentsUsingGET",
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace ID.",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-example": "00000000-0000-0000-0000-000000000000"
          }
        ],
        "deprecated": false,
        "responses": {
          "200": {
            "description": "You have successfully submitted your request.",
            "schema": {
              "$ref": "#/definitions/Resources%C2%ABAgentSummary%C2%BB"
            }
          }
        }
      },
      "post": {
        "tags": [
          "agents"
        ],
        "summary": "createWorkspaceAgent",
        "description": "Create a new agent in the given workspace.",
        "operationId": "createWorkspaceAgentUsingPOST",
        "parameters": [
          {
            "in": "body",
            "name": "createModel",
            "description": "Agent create model including name and agent_type.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AgentCreate"
            }
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace ID.",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-example": "00000000-0000-0000-0000-000000000000"
          }
        ],
        "deprecated": false,
        "responses": {
          "200": {
            "description": "You have successfully submitted your request.",
            "schema": {
              "$ref": "#/definitions/CreatedAgent"
            }
          }
        }
      }
    },
    "/v3/workspaces/{workspaceId}/agents/{agentId}": {
      "get": {
        "tags": [
          "agents"
        ],
        "summary": "getWorkspaceAgent",
        "description": "Get a single AgentSummaryResource.",
        "operationId": "getWorkspaceAgentUsingGET",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "Agent ID.",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-example": "00000000-0000-0000-0000-000000000000"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace ID.",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-example": "00000000-0000-0000-0000-000000000000"
          }
        ],
        "deprecated": false,
        "responses": {
          "200": {
            "description": "You have successfully submitted your request.",
            "schema": {
              "$ref": "#/definitions/AgentSummary"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "agents"
        ],
        "summary": "Delete Workspace Agent",
        "description": "Delete an agent in a given workspace, with the provided workspace identifier and agent identifier.",
        "operationId": "deleteAgentInWorkspaceUsingDELETE",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "Agent ID.",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-example": "00000000-0000-0000-0000-000000000000"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace ID.",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-example": "00000000-0000-0000-0000-000000000000"
          }
        ],
        "deprecated": false,
        "responses": {
          "200": {
            "description": "You have successfully submitted your request."
          }
        }
      }
    },
    "/v3/workspaces/{workspaceId}/agents/{agentId}/token:regenerate": {
      "post": {
        "tags": [
          "agents"
        ],
        "summary": "renewWorkspaceAgentToken",
        "description": "Create a new agent token for the given agent ID. This request invalidates the existing tokens for this agent.",
        "operationId": "renewWorkspaceAgentTokenUsingPOST",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "Agent ID.",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-example": "00000000-0000-0000-0000-000000000000"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace ID.",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-example": "00000000-0000-0000-0000-000000000000"
          }
        ],
        "deprecated": false,
        "responses": {
          "200": {
            "description": "You have successfully submitted your request.",
            "schema": {
              "$ref": "#/definitions/AgentToken"
            }
          }
        }
      }
    },
    "/v3/workspaces/{workspaceId}/agents/{agentId}/tokens": {
      "get": {
        "tags": [
          "agents"
        ],
        "summary": "getWorkspaceAgentTokens",
        "description": "Get a list of the tokens tied to a specific agent.",
        "operationId": "getWorkspaceAgentTokensUsingGET",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "Agent ID.",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-example": "00000000-0000-0000-0000-000000000000"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace ID.",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-example": "00000000-0000-0000-0000-000000000000"
          }
        ],
        "deprecated": false,
        "responses": {
          "200": {
            "description": "You have successfully submitted your request.",
            "schema": {
              "$ref": "#/definitions/Resources%C2%ABAgentToken%C2%BB"
            }
          }
        }
      }
    },
    "/v3/workspaces/{workspaceId}/agents/{agentId}/tokens/{tokenId}": {
      "get": {
        "tags": [
          "agents"
        ],
        "summary": "getWorkspaceAgentToken",
        "description": "Get a single agent token.",
        "operationId": "getWorkspaceAgentTokenUsingGET",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "Agent ID.",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-example": "00000000-0000-0000-0000-000000000000"
          },
          {
            "name": "tokenId",
            "in": "path",
            "description": "Token ID.",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-example": "00000000-0000-0000-0000-000000000000"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace ID.",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-example": "00000000-0000-0000-0000-000000000000"
          }
        ],
        "deprecated": false,
        "responses": {
          "200": {
            "description": "You have successfully submitted your request.",
            "schema": {
              "$ref": "#/definitions/AgentToken"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "agents"
        ],
        "summary": "revokeWorkspaceAgentToken",
        "operationId": "revokeWorkspaceAgentTokenUsingDELETE",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "Agent ID.",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-example": "00000000-0000-0000-0000-000000000000"
          },
          {
            "name": "tokenId",
            "in": "path",
            "description": "Token ID.",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-example": "00000000-0000-0000-0000-000000000000"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace ID.",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-example": "00000000-0000-0000-0000-000000000000"
          }
        ],
        "deprecated": false,
        "responses": {
          "200": {
            "description": "You have successfully submitted your request."
          }
        }
      }
    },
    "/sbom/v1/targets/{targetUuid}/cyclonedx": {
      "get": {
        "tags": [
          "sbom"
        ],
        "summary": "getSbomCyclonedx",
        "operationId": "getSbomCyclonedxUsingGET",
        "parameters": [
          {
            "name": "targetUuid",
            "in": "path",
            "description": "target ID.",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-example": "00000000-0000-0000-0000-000000000000"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filter by scan type.",
            "required": true,
            "type": "string",
            "default": "application",
            "allowEmptyValue": false,
            "enum": [
              "application",
              "agent"
            ]
          },
          {
            "name": "vulnerability",
            "in": "query",
            "description": "Include vulnerability infomation.",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "name": "linked",
            "in": "query",
            "description": "Include results from linked projects.",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "deprecated": false,
        "responses": {
          "200": {
            "description": "You have successfully submitted your request.",
            "schema": {
              "$ref": "#/definitions/sbom"
            }
          }
        }
      }
    },
    "/sbom/v1/targets/{targetUuid}/spdx": {
      "get": {
        "tags": [
          "sbom"
        ],
        "summary": "getSbomSpdx",
        "operationId": "getSbomSpdxUsingGET",
        "parameters": [
          {
            "name": "targetUuid",
            "in": "path",
            "description": "target ID.",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-example": "00000000-0000-0000-0000-000000000000"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filter by scan type.",
            "required": true,
            "type": "string",
            "default": "application",
            "allowEmptyValue": false,
            "enum": [
              "application",
              "agent"
            ]
          },
          {
            "name": "vulnerability",
            "in": "query",
            "description": "Include vulnerability information.",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "name": "dependency",
            "in": "query",
            "description": "Include dependecy information.",
            "required": false,
            "type": "boolean",
            "default": true
          }
        ],
        "deprecated": false,
        "responses": {
          "200": {
            "description": "You have successfully submitted your request.",
            "schema": {
              "$ref": "#/definitions/sbom-spdx"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AgentSummary": {
      "type": "object",
      "properties": {
        "_links": {
          "type": "array",
          "xml": {
            "name": "link",
            "attribute": false,
            "wrapped": false
          },
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "created_by": {
          "type": "string"
        },
        "created_date": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "last_scan_date": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        }
      },
      "title": "AgentSummary"
    },
    "AgentToken": {
      "type": "object",
      "properties": {
        "_links": {
          "type": "array",
          "xml": {
            "name": "link",
            "attribute": false,
            "wrapped": false
          },
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "access_token": {
          "type": "string",
          "description": "Access token for the agent. This field is only visible when a token is first created and returned."
        },
        "created_by": {
          "type": "string"
        },
        "created_date": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string"
        }
      },
      "title": "AgentToken"
    },
    "PagedResources«AuditEvent»": {
      "type": "object",
      "properties": {
        "_embedded": {
          "type": "array",
          "xml": {
            "name": "embedded",
            "attribute": false,
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/AuditEvent"
          }
        },
        "_links": {
          "type": "array",
          "xml": {
            "name": "link",
            "attribute": false,
            "wrapped": false
          },
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "page": {
          "$ref": "#/definitions/PageMetadata"
        }
      },
      "title": "PagedResources«AuditEvent»",
      "xml": {
        "name": "pagedEntities",
        "attribute": false,
        "wrapped": false
      }
    },
    "AuditEvent": {
      "type": "object",
      "properties": {
        "_links": {
          "type": "array",
          "xml": {
            "name": "link",
            "attribute": false,
            "wrapped": false
          },
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "actor": {
          "type": "string",
          "description": "Current username of the actor who invoked the event. For auditing, check the Veracode Platform user activity log for username changes or, if you cannot find the information you need, contact Veracode Technical Support. If null, a Veracode internal system invoked the event."
        },
        "date": {
          "type": "string",
          "format": "date-time",
          "description": "Date the audit event was created on."
        },
        "event_group": {
          "type": "string",
          "description": "Event group for the audit event."
        },
        "event_type": {
          "type": "string",
          "description": "Event type for the audit event"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "description": "Audit event identifier."
        },
        "reason": {
          "type": "string",
          "description": "The reason for the audit event."
        },
        "source_ip": {
          "type": "string",
          "description": "Source IP the audit event happened on."
        },
        "target_agent": {
          "type": "string",
          "description": "Target agent of the audit event."
        },
        "target_project": {
          "type": "string",
          "description": "Target project of the audit event."
        },
        "target_workspace": {
          "type": "string",
          "description": "Target workspace of the audit event."
        }
      },
      "title": "AuditEvent"
    },
    "CreateWorkspaceModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The workspace name. Must be between 3 and 20 letters, numbers, spaces, hyphens, single-quotes or underscores (must start with a letter)."
        }
      },
      "title": "CreateWorkspaceModel"
    },
    "AgentCreate": {
      "type": "object",
      "properties": {
        "agent_type": {
          "type": "string",
          "enum": [
            "CLI",
            "MAVEN",
            "GRADLE",
            "JENKINS",
            "BAMBOO",
            "CIRCLECI",
            "CODESHIP",
            "PIPELINES",
            "TRAVIS",
            "WINDOWSCI"
          ]
        },
        "name": {
          "type": "string"
        }
      },
      "title": "AgentCreate"
    },
    "CreatedAgent": {
      "type": "object",
      "properties": {
        "_links": {
          "type": "array",
          "xml": {
            "name": "link",
            "attribute": false,
            "wrapped": false
          },
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "created_by": {
          "type": "string"
        },
        "created_date": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "last_scan_date": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "site_id": {
          "type": "integer",
          "format": "int64"
        },
        "token": {
          "$ref": "#/definitions/AgentToken"
        }
      },
      "title": "CreatedAgent"
    },
    "PagedResources«IssueSummary»": {
      "type": "object",
      "properties": {
        "_embedded": {
          "type": "array",
          "xml": {
            "name": "embedded",
            "attribute": false,
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/IssueSummary"
          }
        },
        "_links": {
          "type": "array",
          "xml": {
            "name": "link",
            "attribute": false,
            "wrapped": false
          },
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "page": {
          "$ref": "#/definitions/PageMetadata"
        }
      },
      "title": "PagedResources«Issue Summary»",
      "xml": {
        "name": "pagedEntities",
        "attribute": false,
        "wrapped": false
      }
    },
    "IssueSummary": {
      "type": "object",
      "properties": {
        "_links": {
          "type": "array",
          "xml": {
            "name": "link",
            "attribute": false,
            "wrapped": false
          },
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "created_date": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "ignored": {
          "type": "boolean"
        },
        "issue_status": {
          "type": "string",
          "enum": [
            "fixed",
            "open"
          ]
        },
        "issue_type": {
          "type": "string",
          "enum": [
            "library",
            "license",
            "vulnerability"
          ]
        },
        "library": {
          "$ref": "#/definitions/LibrarySummary"
        },
        "library_updated_release_date": {
          "type": "string",
          "format": "date-time",
          "description": "Library update release date. Only set for issue_type=library."
        },
        "library_updated_version": {
          "type": "string",
          "description": "Library update version. Only set for issue_type=library."
        },
        "license": {
          "$ref": "#/definitions/LicenseSummary"
        },
        "license_count": {
          "type": "integer",
          "format": "int32",
          "description": "License count. Only set for issue_type=license."
        },
        "project_branch": {
          "type": "string"
        },
        "project_id": {
          "type": "string",
          "format": "uuid"
        },
        "project_name": {
          "type": "string"
        },
        "project_tag": {
          "type": "string"
        },
        "severity": {
          "type": "number",
          "format": "float"
        },
        "site_id": {
          "type": "integer",
          "format": "int64"
        },
        "vulnerability": {
          "$ref": "#/definitions/VulnerabilitySummary"
        },
        "vulnerable_method": {
          "type": "boolean",
          "description": "Only set for issue_type=vulnerability."
        },
        "vulnerable_method_information": {
          "type": "string",
          "description": "Only set for issue_type=vulnerability."
        },
        "workspace_id": {
          "type": "string",
          "format": "uuid"
        }
      },
      "title": "IssueSummary"
    },
    "IssueDetailed": {
      "type": "object",
      "properties": {
        "_links": {
          "type": "array",
          "xml": {
            "name": "link",
            "attribute": false,
            "wrapped": false
          },
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "component_file_name": {
          "type": "string"
        },
        "component_file_path": {
          "type": "string"
        },
        "created_date": {
          "type": "string",
          "format": "date-time"
        },
        "fixed_scan": {
          "$ref": "#/definitions/Scan"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "ignored": {
          "type": "boolean"
        },
        "issue_status": {
          "type": "string",
          "enum": [
            "fixed",
            "open"
          ]
        },
        "issue_type": {
          "type": "string",
          "enum": [
            "library",
            "license",
            "vulnerability"
          ]
        },
        "library": {
          "$ref": "#/definitions/LibrarySummary"
        },
        "library_updated_release_date": {
          "type": "string",
          "format": "date-time",
          "description": "Library update release date. Only set for issue_type=library."
        },
        "library_updated_version": {
          "type": "string",
          "description": "Library update version. Only set for issue_type=library."
        },
        "license": {
          "$ref": "#/definitions/LicenseSummary"
        },
        "license_count": {
          "type": "integer",
          "format": "int32",
          "description": "License count. Only set for issue_type=license."
        },
        "opened_scan": {
          "$ref": "#/definitions/Scan"
        },
        "project_branch": {
          "type": "string"
        },
        "project_id": {
          "type": "string",
          "format": "uuid"
        },
        "project_name": {
          "type": "string"
        },
        "project_tag": {
          "type": "string"
        },
        "severity": {
          "type": "number",
          "format": "float"
        },
        "site_id": {
          "type": "integer",
          "format": "int64"
        },
        "vulnerability": {
          "$ref": "#/definitions/VulnerabilitySummary"
        },
        "vulnerable_method": {
          "type": "boolean",
          "description": "Only set for issue_type=vulnerability."
        },
        "vulnerable_method_information": {
          "type": "string",
          "description": "Only set for issue_type=vulnerability."
        },
        "workspace_id": {
          "type": "string",
          "format": "uuid"
        },
        "fix_info": {
          "$ref": "#/definitions/FixInfo"
        },
        "vulnerable_methods": {
          "type": "array",
          "description": "Details about a vulnerable method in use in the library, including the type of method and the line number. Only set for issue_type=vulnerability.",
          "items": {
            "$ref": "#/definitions/VulnerableMethod"
          }
        }
      },
      "title": "IssueDetailed"
    },
    "LibraryDetailed": {
      "type": "object",
      "properties": {
        "_links": {
          "type": "array",
          "xml": {
            "name": "link",
            "attribute": false,
            "wrapped": false
          },
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "direct": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "language": {
          "type": "string",
          "enum": [
            "java",
            "js",
            "ruby",
            "python",
            "go",
            "php",
            "objectivec",
            "cpp",
            "csharp"
          ]
        },
        "latest_version": {
          "type": "string"
        },
        "latest_version_release_date": {
          "type": "string",
          "format": "date-time"
        },
        "licenses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LicenseSummary"
          }
        },
        "line_count": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "release_date": {
          "type": "string",
          "format": "date-time"
        },
        "transitive": {
          "type": "boolean"
        },
        "version": {
          "type": "string"
        }
      },
      "title": "LibraryDetailed"
    },
    "LibrarySummary": {
      "type": "object",
      "properties": {
        "_links": {
          "type": "array",
          "xml": {
            "name": "link",
            "attribute": false,
            "wrapped": false
          },
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "direct": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "latest_version": {
          "type": "string"
        },
        "latest_version_release_date": {
          "type": "string",
          "format": "date"
        },
        "name": {
          "type": "string"
        },
        "release_date": {
          "type": "string",
          "format": "date"
        },
        "transitive": {
          "type": "boolean"
        },
        "version": {
          "type": "string"
        }
      },
      "title": "LibrarySummary"
    },
    "LicenseDetailed": {
      "type": "object",
      "properties": {
        "_links": {
          "type": "array",
          "xml": {
            "name": "link",
            "attribute": false,
            "wrapped": false
          },
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "text": {
          "type": "string"
        }
      },
      "title": "LicenseDetailed"
    },
    "LicenseSummary": {
      "type": "object",
      "properties": {
        "_links": {
          "type": "array",
          "xml": {
            "name": "link",
            "attribute": false,
            "wrapped": false
          },
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "risk": {
          "type": "string",
          "enum": [
            "UNKNOWN",
            "LOW",
            "MEDIUM",
            "HIGH"
          ]
        }
      },
      "title": "LicenseSummary",
      "description": "License Summary. Only set for issue_type=license."
    },
    "Link": {
      "type": "object",
      "properties": {
        "deprecation": {
          "type": "string",
          "xml": {
            "name": "deprecation",
            "attribute": true,
            "wrapped": false
          }
        },
        "href": {
          "type": "string",
          "xml": {
            "name": "href",
            "attribute": true,
            "wrapped": false
          }
        },
        "hreflang": {
          "type": "string",
          "xml": {
            "name": "hreflang",
            "attribute": true,
            "wrapped": false
          }
        },
        "media": {
          "type": "string",
          "xml": {
            "name": "media",
            "attribute": true,
            "wrapped": false
          }
        },
        "rel": {
          "type": "string",
          "xml": {
            "name": "rel",
            "attribute": true,
            "wrapped": false
          }
        },
        "templated": {
          "type": "boolean"
        },
        "title": {
          "type": "string",
          "xml": {
            "name": "title",
            "attribute": true,
            "wrapped": false
          }
        },
        "type": {
          "type": "string",
          "xml": {
            "name": "type",
            "attribute": true,
            "wrapped": false
          }
        }
      },
      "title": "Link"
    },
    "PageMetadata": {
      "type": "object",
      "properties": {
        "number": {
          "type": "integer",
          "format": "int64",
          "xml": {
            "name": "number",
            "attribute": true,
            "wrapped": false
          }
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "xml": {
            "name": "size",
            "attribute": true,
            "wrapped": false
          }
        },
        "total_elements": {
          "type": "integer",
          "format": "int64",
          "xml": {
            "name": "total_elements",
            "attribute": true,
            "wrapped": false
          }
        },
        "total_pages": {
          "type": "integer",
          "format": "int64",
          "xml": {
            "name": "total_pages",
            "attribute": true,
            "wrapped": false
          }
        }
      },
      "title": "PageMetadata"
    },
    "PagedResources«LibrarySummary»": {
      "type": "object",
      "properties": {
        "_embedded": {
          "type": "array",
          "xml": {
            "name": "embedded",
            "attribute": false,
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/LibrarySummary"
          }
        },
        "_links": {
          "type": "array",
          "xml": {
            "name": "link",
            "attribute": false,
            "wrapped": false
          },
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "page": {
          "$ref": "#/definitions/PageMetadata"
        }
      },
      "title": "PagedResources«LibrarySummary»",
      "xml": {
        "name": "pagedEntities",
        "attribute": false,
        "wrapped": false
      }
    },
    "PagedResources«Project»": {
      "type": "object",
      "properties": {
        "_embedded": {
          "type": "array",
          "xml": {
            "name": "embedded",
            "attribute": false,
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/Project"
          }
        },
        "_links": {
          "type": "array",
          "xml": {
            "name": "link",
            "attribute": false,
            "wrapped": false
          },
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "page": {
          "$ref": "#/definitions/PageMetadata"
        }
      },
      "title": "PagedResources«Project»",
      "xml": {
        "name": "pagedEntities",
        "attribute": false,
        "wrapped": false
      }
    },
    "PagedResources«UnmatchedLibraryReportResource»": {
      "type": "object",
      "properties": {
        "_embedded": {
          "type": "array",
          "xml": {
            "name": "embedded",
            "attribute": false,
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/UnmatchedLibraryReportResource"
          }
        },
        "_links": {
          "type": "array",
          "xml": {
            "name": "link",
            "attribute": false,
            "wrapped": false
          },
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "page": {
          "$ref": "#/definitions/PageMetadata"
        }
      },
      "title": "PagedResources«UnmatchedLibraryReportResource»",
      "xml": {
        "name": "pagedEntities",
        "attribute": false,
        "wrapped": false
      }
    },
    "PagedResources«Workspace»": {
      "type": "object",
      "properties": {
        "_embedded": {
          "type": "array",
          "xml": {
            "name": "embedded",
            "attribute": false,
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/Workspace"
          }
        },
        "_links": {
          "type": "array",
          "xml": {
            "name": "link",
            "attribute": false,
            "wrapped": false
          },
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "page": {
          "$ref": "#/definitions/PageMetadata"
        }
      },
      "title": "PagedResources«Workspace»",
      "xml": {
        "name": "pagedEntities",
        "attribute": false,
        "wrapped": false
      }
    },
    "Project": {
      "type": "object",
      "properties": {
        "_links": {
          "type": "array",
          "example": {
            "self": {
              "href": "https://api.veracode.com/srcclr/v3/workspaces/25f2704e-faaa-45a0-a3d8-88ebf61fe3d8/projects/5e5b3f95-d05c-4fe7-a2d2-8b897d2d0418"
            },
            "linked_application": {
              "href": "https://api.veracode.com/appsec/v1/applications/9dc43444-f9e9-4085-850f-9a0d6e31a9f3"
            }
          },
          "xml": {
            "name": "link",
            "attribute": false,
            "wrapped": false
          },
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "branches": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "string"
        },
        "languages": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "JAVA",
              "JS",
              "RUBY",
              "PYTHON",
              "OBJECTIVEC",
              "SWIFT",
              "PHP",
              "SCALA",
              "GO",
              "CPP",
              "CSHARP",
              "OS"
            ]
          }
        },
        "last_scan_date": {
          "type": "string",
          "format": "date-time"
        },
        "library_issues_count": {
          "type": "integer",
          "format": "int32"
        },
        "license_issues_count": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "site_id": {
          "type": "string"
        },
        "total_issues_count": {
          "type": "integer",
          "format": "int32"
        },
        "vulnerability_issues_count": {
          "type": "integer",
          "format": "int32"
        },
        "linked_application": {
          "$ref": "#/definitions/Project_linked_application"
        }
      },
      "title": "Project"
    },
    "Resources«AgentSummary»": {
      "type": "object",
      "properties": {
        "_embedded": {
          "type": "array",
          "xml": {
            "name": "embedded",
            "attribute": false,
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/AgentSummary"
          }
        },
        "_links": {
          "type": "array",
          "xml": {
            "name": "link",
            "attribute": false,
            "wrapped": false
          },
          "items": {
            "$ref": "#/definitions/Link"
          }
        }
      },
      "title": "Resources«AgentSummary»",
      "xml": {
        "name": "entities",
        "attribute": false,
        "wrapped": false
      }
    },
    "Resources«AgentToken»": {
      "type": "object",
      "properties": {
        "_embedded": {
          "type": "array",
          "xml": {
            "name": "embedded",
            "attribute": false,
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/AgentToken"
          }
        },
        "_links": {
          "type": "array",
          "xml": {
            "name": "link",
            "attribute": false,
            "wrapped": false
          },
          "items": {
            "$ref": "#/definitions/Link"
          }
        }
      },
      "title": "Resources«AgentToken»",
      "xml": {
        "name": "entities",
        "attribute": false,
        "wrapped": false
      }
    },
    "Resources«Team»": {
      "type": "object",
      "properties": {
        "_embedded": {
          "type": "array",
          "xml": {
            "name": "embedded",
            "attribute": false,
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/Team"
          }
        },
        "_links": {
          "type": "array",
          "xml": {
            "name": "link",
            "attribute": false,
            "wrapped": false
          },
          "items": {
            "$ref": "#/definitions/Link"
          }
        }
      },
      "title": "Resources«Team»",
      "xml": {
        "name": "entities",
        "attribute": false,
        "wrapped": false
      }
    },
    "ResponseEntity": {
      "type": "object",
      "properties": {
        "body": {
          "type": "object",
          "properties": {}
        },
        "status_code": {
          "type": "string",
          "enum": [
            "100 CONTINUE",
            "101 SWITCHING_PROTOCOLS",
            "102 PROCESSING",
            "103 CHECKPOINT",
            "200 OK",
            "201 CREATED",
            "202 ACCEPTED",
            "203 NON_AUTHORITATIVE_INFORMATION",
            "204 NO_CONTENT",
            "205 RESET_CONTENT",
            "206 PARTIAL_CONTENT",
            "207 MULTI_STATUS",
            "208 ALREADY_REPORTED",
            "226 IM_USED",
            "300 MULTIPLE_CHOICES",
            "301 MOVED_PERMANENTLY",
            "302 FOUND",
            "302 MOVED_TEMPORARILY",
            "303 SEE_OTHER",
            "304 NOT_MODIFIED",
            "305 USE_PROXY",
            "307 TEMPORARY_REDIRECT",
            "308 PERMANENT_REDIRECT",
            "400 BAD_REQUEST",
            "401 UNAUTHORIZED",
            "402 PAYMENT_REQUIRED",
            "403 FORBIDDEN",
            "404 NOT_FOUND",
            "405 METHOD_NOT_ALLOWED",
            "406 NOT_ACCEPTABLE",
            "407 PROXY_AUTHENTICATION_REQUIRED",
            "408 REQUEST_TIMEOUT",
            "409 CONFLICT",
            "410 GONE",
            "411 LENGTH_REQUIRED",
            "412 PRECONDITION_FAILED",
            "413 PAYLOAD_TOO_LARGE",
            "413 REQUEST_ENTITY_TOO_LARGE",
            "414 URI_TOO_LONG",
            "414 REQUEST_URI_TOO_LONG",
            "415 UNSUPPORTED_MEDIA_TYPE",
            "416 REQUESTED_RANGE_NOT_SATISFIABLE",
            "417 EXPECTATION_FAILED",
            "418 I_AM_A_TEAPOT",
            "419 INSUFFICIENT_SPACE_ON_RESOURCE",
            "420 METHOD_FAILURE",
            "421 DESTINATION_LOCKED",
            "422 UNPROCESSABLE_ENTITY",
            "423 LOCKED",
            "424 FAILED_DEPENDENCY",
            "426 UPGRADE_REQUIRED",
            "428 PRECONDITION_REQUIRED",
            "429 TOO_MANY_REQUESTS",
            "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
            "451 UNAVAILABLE_FOR_LEGAL_REASONS",
            "500 INTERNAL_SERVER_ERROR",
            "501 NOT_IMPLEMENTED",
            "502 BAD_GATEWAY",
            "503 SERVICE_UNAVAILABLE",
            "504 GATEWAY_TIMEOUT",
            "505 HTTP_VERSION_NOT_SUPPORTED",
            "506 VARIANT_ALSO_NEGOTIATES",
            "507 INSUFFICIENT_STORAGE",
            "508 LOOP_DETECTED",
            "509 BANDWIDTH_LIMIT_EXCEEDED",
            "510 NOT_EXTENDED",
            "511 NETWORK_AUTHENTICATION_REQUIRED"
          ]
        },
        "status_code_value": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "ResponseEntity"
    },
    "Scan": {
      "type": "object",
      "properties": {
        "_links": {
          "type": "array",
          "xml": {
            "name": "link",
            "attribute": false,
            "wrapped": false
          },
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "branch": {
          "type": "string"
        },
        "commit": {
          "type": "string"
        },
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "tag": {
          "type": "string"
        }
      },
      "title": "Scan"
    },
    "Team": {
      "type": "object",
      "properties": {
        "_links": {
          "type": "array",
          "xml": {
            "name": "link",
            "attribute": false,
            "wrapped": false
          },
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "title": "Team"
    },
    "UnmatchedLibraryReportResource": {
      "type": "object",
      "properties": {
        "_links": {
          "type": "array",
          "xml": {
            "name": "link",
            "attribute": false,
            "wrapped": false
          },
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "bytecode": {
          "type": "string"
        },
        "commit_hash": {
          "type": "string"
        },
        "coord1": {
          "type": "string"
        },
        "coord2": {
          "type": "string"
        },
        "coordinate_type": {
          "type": "string",
          "enum": [
            "MAVEN",
            "GEM",
            "NPM",
            "BOWER",
            "PYPI",
            "COCOAPODS",
            "GO",
            "PACKAGIST",
            "SO",
            "NUGET",
            "RPM",
            "MANUAL"
          ]
        },
        "file_path": {
          "type": "string"
        },
        "filename": {
          "type": "string"
        },
        "library_version": {
          "type": "string"
        },
        "sha1": {
          "type": "string"
        },
        "sha256": {
          "type": "string"
        }
      },
      "title": "UnmatchedLibraryReportResource"
    },
    "VulnerabilityDetailed": {
      "type": "object",
      "properties": {
        "_links": {
          "type": "array",
          "xml": {
            "name": "link",
            "attribute": false,
            "wrapped": false
          },
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "cve": {
          "type": "string"
        },
        "cvss2": {
          "type": "number",
          "format": "float"
        },
        "cvss3": {
          "type": "number",
          "format": "float"
        },
        "disclosure_date": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string"
        },
        "overview": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "cwe_id": {
          "type": "string"
        },
        "unpublished": {
          "type": "boolean",
          "description": "True if Veracode has removed this vulnerability from the public registry after further research."
        }
      },
      "title": "VulnerabilityDetailed"
    },
    "VulnerabilitySummary": {
      "type": "object",
      "properties": {
        "_links": {
          "type": "array",
          "xml": {
            "name": "link",
            "attribute": false,
            "wrapped": false
          },
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "cve": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "unpublished": {
          "type": "boolean",
          "description": "True if Veracode has removed this vulnerability from the public registry after further research."
        },
        "cvss2_vector": {
          "type": "string"
        },
        "cvss3_vector": {
          "type": "string"
        },
        "cvss2_score": {
          "type": "number",
          "format": "float"
        },
        "cvss3_score": {
          "type": "number",
          "format": "float"
        },
        "cwe_id": {
          "type": "string"
        }
      },
      "title": "VulnerabilitySummary",
      "description": "Vulnerability Summary. Only set for issue_type=vulnerability."
    },
    "Workspace": {
      "type": "object",
      "properties": {
        "_links": {
          "type": "array",
          "xml": {
            "name": "link",
            "attribute": false,
            "wrapped": false
          },
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "custom_policy_enabled": {
          "type": "boolean"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "last_scan_date": {
          "type": "string",
          "format": "date-time"
        },
        "library_issues_count": {
          "type": "integer",
          "format": "int32"
        },
        "license_issues_count": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "projects_count": {
          "type": "integer",
          "format": "int32"
        },
        "sandbox": {
          "type": "boolean"
        },
        "site_id": {
          "type": "string"
        },
        "total_issues_count": {
          "type": "integer",
          "format": "int32"
        },
        "vulnerability_issues_count": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Workspace"
    },
    "ComponentMetricsModel": {
      "type": "object",
      "properties": {
        "component_metrics": {
          "type": "object",
          "properties": {}
        },
        "cvss2_vuln_counts": {
          "type": "object",
          "properties": {}
        },
        "cvss3_vuln_counts": {
          "type": "object",
          "properties": {}
        }
      },
      "title": "ComponentMetricsModel"
    },
    "ComponentMetrics": {
      "type": "object",
      "properties": {
        "library_id": {
          "type": "integer",
          "format": "int64"
        },
        "age": {
          "type": "integer",
          "format": "int64"
        },
        "code_repo_url": {
          "type": "string"
        },
        "commit_activity": {
          "type": "number",
          "format": "double"
        },
        "commit_volume": {
          "type": "number",
          "format": "double"
        },
        "files_changed": {
          "type": "integer",
          "format": "int64"
        },
        "lines_added": {
          "type": "integer",
          "format": "int64"
        },
        "lines_removed": {
          "type": "integer",
          "format": "int64"
        },
        "num_commits_past12_months": {
          "type": "integer",
          "format": "int64"
        },
        "num_commits_past30_days": {
          "type": "integer",
          "format": "int64"
        },
        "num_committers": {
          "type": "integer",
          "format": "int64"
        },
        "number_of_commits": {
          "type": "integer",
          "format": "int64"
        },
        "stagnation": {
          "type": "integer",
          "format": "int64"
        },
        "library": {
          "type": "object",
          "properties": {}
        },
        "non_vuln_versions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "ComponentMetrics"
    },
    "Library": {
      "type": "object",
      "properties": {
        "author": {
          "type": "string"
        },
        "author_url": {
          "type": "string"
        },
        "coordinate1": {
          "type": "string"
        },
        "coordinate2": {
          "type": "string"
        },
        "coordinate_type": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "language_type": {
          "type": "string"
        },
        "latest_release_version": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "num_of_releases": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Library"
    },
    "VulnerabilityCounts": {
      "type": "object",
      "properties": {
        "critical": {
          "type": "integer",
          "format": "int32"
        },
        "high": {
          "type": "integer",
          "format": "int32"
        },
        "medium": {
          "type": "integer",
          "format": "int32"
        },
        "low": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "VulnerabilityCounts"
    },
    "FixInfo": {
      "type": "object",
      "properties": {
        "fixed_version": {
          "type": "string"
        },
        "latest_safe_version": {
          "type": "string"
        }
      },
      "title": "FixInfo",
      "description": "Instructions for fixing the vulnerability, including the latest safe version of the library. Only set for issue_type=vulnerability. Is not set if the artifact is no longer RELEASED or if the library instance is no longer affected by the artifact."
    },
    "VulnerableMethod": {
      "type": "object",
      "properties": {
        "method": {
          "$ref": "#/definitions/MethodSummary"
        },
        "call_chains": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CallChain"
          }
        }
      },
      "title": "VulnerableMethod"
    },
    "MethodSummary": {
      "type": "object",
      "properties": {
        "module_name": {
          "type": "string"
        },
        "class_name": {
          "type": "string"
        },
        "method_name": {
          "type": "string"
        }
      },
      "title": "MethodSummary"
    },
    "CallChain": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/CallSite"
      }
    },
    "CallSite": {
      "type": "object",
      "properties": {
        "caller": {
          "$ref": "#/definitions/MethodSummary"
        },
        "callee": {
          "$ref": "#/definitions/MethodSummary"
        },
        "file_name": {
          "type": "string"
        },
        "line_number": {
          "type": "integer",
          "format": "int32"
        },
        "internal": {
          "type": "boolean"
        }
      },
      "title": "CallSite"
    },
    "sbom-spdx": {
      "type": "object",
      "properties": {
        "SPDXID": {
          "type": "string",
          "example": "SPDXRef-DOCUMENT",
          "description": "Identify the current SPDX document which may be referenced in relationships by other files, packages internally and documents externally."
        },
        "spdxVersion": {
          "type": "string",
          "example": "SPDX-2.3",
          "description": "SPDX specification version. Current version is SPDX-2.3"
        },
        "creationInfo": {
          "$ref": "#/definitions/sbomspdx_creationInfo"
        },
        "name": {
          "type": "string",
          "example": "spdx-npm",
          "description": "Project name for upload scan or workspace name for agent scan"
        },
        "dataLicense": {
          "type": "string",
          "example": "CC0-1.0",
          "description": "License with data in the document. Use the Creative Commons CC0 1.0 Universal license is ussed."
        },
        "documentDescribes": {
          "type": "array",
          "description": "List of package identifiers",
          "items": {
            "type": "string",
            "example": "SPDXRef-Package-1c2d5cc5-cc6c-550c-88c1-a897b8f2c0ae"
          }
        },
        "documentNamespace": {
          "type": "string",
          "example": "https://api.veracode.com/srcclr/sbom/v1/targets/d7e66d2b-1dde-46b8-bff4-f3131f8314cd/spdx",
          "description": "Provide an SPDX document-specific namespace as a unique absolute Uniform Resource Identifier (URI) as specified in RFC-3986"
        },
        "packages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/sbomspdx_packages"
          }
        },
        "relationships": {
          "type": "array",
          "description": "Dependencies between packages(libraries)",
          "items": {
            "$ref": "#/definitions/sbomspdx_relationships"
          }
        }
      },
      "title": "SBOM SPDX Document"
    },
    "sbom": {
      "type": "object",
      "properties": {
        "bomFormat": {
          "type": "string",
          "description": "Specifies the format of the BOM. This helps to identify the file as CycloneDX since BOMs do not have a filename convention nor does JSON schema support namespaces. This value MUST be \"CycloneDX\".",
          "title": "BOM Format",
          "enum": [
            "CycloneDX"
          ]
        },
        "specVersion": {
          "type": "string",
          "description": "The version of the CycloneDX specification a BOM conforms to (starting at version 1.2).",
          "title": "CycloneDX Specification Version"
        },
        "serialNumber": {
          "type": "string",
          "description": "Every BOM generated should have a unique serial number, even if the contents of the BOM have not changed over time. If specified, the serial number MUST conform to RFC-4122. Veracode recommends using serial numbers.",
          "title": "BOM Serial Number",
          "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
        },
        "version": {
          "type": "integer",
          "description": "Whenever an existing BOM is modified, either manually or through automated processes, the version of the BOM should be incremented by 1. When a system is presented with multiple BOMs with identical serial numbers, the system should use the most recent version of the BOM. The default version is '1'.",
          "title": "BOM Version"
        },
        "metadata": {
          "description": "Provides additional information about a BOM.",
          "title": "BOM Metadata",
          "$ref": "#/definitions/metadata"
        },
        "components": {
          "type": "array",
          "description": "A list of software and hardware components.",
          "title": "Components",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/component"
          }
        },
        "dependencies": {
          "type": "array",
          "description": "Provides the ability to document dependency relationships.",
          "title": "Dependencies",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/dependency"
          }
        },
        "vulnerabilities": {
          "type": "array",
          "description": "Vulnerabilities identified in components or services.",
          "title": "Vulnerabilities",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/vulnerability"
          }
        }
      },
      "title": "SBOM Object"
    },
    "refType": {
      "type": "string"
    },
    "metadata": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time (timestamp) when the BOM was created.",
          "title": "Timestamp"
        },
        "tools": {
          "type": "array",
          "description": "The tools used in the creation of the BOM.",
          "title": "Creation Tools",
          "items": {
            "$ref": "#/definitions/tool"
          }
        },
        "component": {
          "description": "The component that the BOM describes.",
          "title": "Component",
          "$ref": "#/definitions/component"
        },
        "author": {
          "description": "The organization that supplied the component that the BOM describes. The supplier may often be the manufacturer, but may also be a distributor or repackager.",
          "title": "Supplier",
          "$ref": "#/definitions/organizationalContact"
        },
        "supplier": {
          "description": "The organization that supplied the component that the BOM describes. The supplier may often be the manufacturer, but may also be a distributor or repackager.",
          "title": "Supplier",
          "$ref": "#/definitions/organizationalEntity"
        }
      },
      "title": "BOM Metadata Object"
    },
    "tool": {
      "type": "object",
      "properties": {
        "vendor": {
          "type": "string",
          "description": "The name of the vendor who created the tool.",
          "title": "Tool Vendor"
        },
        "name": {
          "type": "string",
          "description": "The name of the tool.",
          "title": "Tool Name"
        },
        "version": {
          "type": "string",
          "description": "The version of the tool.",
          "title": "Version"
        }
      },
      "title": "Tool",
      "description": "Information about the automated or manual tool used."
    },
    "organizationalEntity": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name"
        },
        "url": {
          "type": "array",
          "description": "The URL of the organization. Multiple URLs are allowed.",
          "title": "URL",
          "items": {
            "type": "string",
            "format": "iri-reference"
          }
        }
      },
      "title": "Organizational Entity Object",
      "description": ""
    },
    "organizationalContact": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of a contact.",
          "title": "Name"
        },
        "email": {
          "type": "string",
          "format": "idn-email",
          "description": "The email address of the contact.",
          "title": "Email Address"
        }
      },
      "title": "Organizational Contact Object",
      "description": ""
    },
    "component": {
      "type": "object",
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "description": "Specifies the type of component. For software components, classify as application if no more specific appropriate classification is available or cannot be determined for the component. Types include:\n\n* __application__ = A software application. Refer to [https://en.wikipedia.org/wiki/Application_software](https://en.wikipedia.org/wiki/Application_software) for information about applications.\n* __framework__ = A software framework. Refer to [https://en.wikipedia.org/wiki/Software_framework](https://en.wikipedia.org/wiki/Software_framework) for information on how frameworks vary slightly from libraries.\n* __library__ = A software library. Refer to [https://en.wikipedia.org/wiki/Library_(computing)](https://en.wikipedia.org/wiki/Library_(computing))\n for information about libraries. All third-party and open source reusable components are likely libraries. If the library also has key features of a framework, then it should be classified as a framework. If not, or if it is unknown, then Veracode recommends classifying as a library.\n* __container__ = A packaging and/or runtime format, not specific to any particular technology, which isolates software inside the container from software outside of a container through virtualization technology. Refer to [https://en.wikipedia.org/wiki/OS-level_virtualization](https://en.wikipedia.org/wiki/OS-level_virtualization)\n* __operating-system__ = A software operating system without regard to deployment model (i.e. installed on physical hardware, virtual machine, image, etc) Refer to [https://en.wikipedia.org/wiki/Operating_system](https://en.wikipedia.org/wiki/Operating_system)\n* __device__ = A hardware device such as a processor or chipset. A hardware device containing firmware should include a component for the physical hardware itself, and another component of type 'firmware' or 'operating-system' (whichever is relevant), describing information about the software running on the device.\n* __firmware__ = A special type of software that provides low-level control over a devices hardware. Refer to [https://en.wikipedia.org/wiki/Firmware](https://en.wikipedia.org/wiki/Firmware)\n* __file__ = A computer file. Refer to [https://en.wikipedia.org/wiki/Computer_file](https://en.wikipedia.org/wiki/Computer_file) for information about files.",
          "title": "Component Type",
          "enum": [
            "application",
            "library"
          ]
        },
        "bom-ref": {
          "description": "An optional identifier, which can be used to reference the component elsewhere in the BOM. Every bom-ref MUST be unique within the BOM.",
          "title": "BOM Reference",
          "$ref": "#/definitions/refType"
        },
        "supplier": {
          "description": "The organization that supplied the component. The supplier is often the manufacturer, but may also be a distributor or repackager.",
          "title": "Component Supplier",
          "$ref": "#/definitions/organizationalEntity"
        },
        "group": {
          "type": "string",
          "description": "The grouping name or identifier. This often is a shortened, single name of the company or project that produced the component, or the source package or domain name. Do not use whitespace or special characters. Examples include: apache, org.apache.commons, and apache.org.",
          "title": "Component Group"
        },
        "name": {
          "type": "string",
          "description": "The name of the component. This often is a shortened, single name of the component. Examples include: commons-lang3 and jquery",
          "title": "Component Name"
        },
        "version": {
          "type": "string",
          "description": "The component version. The version should comply with semantic versioning.",
          "title": "Component Version"
        },
        "hashes": {
          "type": "array",
          "title": "Component Hashes",
          "items": {
            "$ref": "#/definitions/hash"
          }
        },
        "licenses": {
          "type": "array",
          "title": "Component License(s)",
          "items": {
            "$ref": "#/definitions/licenseChoice"
          }
        },
        "purl": {
          "type": "string",
          "description": "Specifies the package-url (purl). The purl, if specified, MUST be valid and conform to the specification defined at: [https://github.com/package-url/purl-spec](https://github.com/package-url/purl-spec)",
          "title": "Component Package URL (purl)"
        },
        "properties": {
          "type": "array",
          "description": "Provides the ability to document properties in a name-value store. This provides flexibility to include data not officially supported in the standard without having to use additional namespaces or create extensions. Unlike key-value stores, properties support duplicate names, each potentially having different values. Property names of interest to the general public are encouraged to be registered in the [CycloneDX Property Taxonomy](https://github.com/CycloneDX/cyclonedx-property-taxonomy). Formal registration is optional.",
          "title": "Properties",
          "items": {
            "$ref": "#/definitions/property"
          }
        }
      },
      "title": "Component Object"
    },
    "hash": {
      "type": "object",
      "required": [
        "alg",
        "content"
      ],
      "properties": {
        "alg": {
          "$ref": "#/definitions/hash-alg"
        },
        "content": {
          "$ref": "#/definitions/hash-content"
        }
      },
      "title": "Hash Objects"
    },
    "hash-alg": {
      "type": "string",
      "title": "Hash Algorithm",
      "enum": [
        "MD5",
        "SHA-1",
        "SHA-256",
        "SHA-384",
        "SHA-512",
        "SHA3-256",
        "SHA3-384",
        "SHA3-512",
        "BLAKE2b-256",
        "BLAKE2b-384",
        "BLAKE2b-512",
        "BLAKE3"
      ]
    },
    "hash-content": {
      "type": "string",
      "title": "Hash Content (value)",
      "pattern": "^([a-fA-F0-9]{32}|[a-fA-F0-9]{40}|[a-fA-F0-9]{64}|[a-fA-F0-9]{96}|[a-fA-F0-9]{128})$"
    },
    "license": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "A valid SPDX license ID.",
          "title": "License ID (SPDX)",
          "enum": [
            "Interbase-1.0",
            "Mup",
            "GPL-2.0-with-autoconf-exception",
            "OLDAP-2.1",
            "CC-BY-NC-SA-3.0-IGO",
            "LGPL-2.0+",
            "xpp",
            "OFL-1.1",
            "CNRI-Python",
            "Linux-man-pages-copyleft",
            "OLDAP-2.2",
            "OSL-1.1",
            "EPL-2.0",
            "AFL-1.1",
            "AGPL-1.0-or-later",
            "GLWTPL",
            "MIT-Modern-Variant",
            "BSD-1-Clause",
            "SGI-B-1.0",
            "OML",
            "psfrag",
            "Artistic-1.0",
            "CC-PDDC",
            "eGenix",
            "EUPL-1.1",
            "Sendmail",
            "PSF-2.0",
            "OGL-UK-1.0",
            "MTLL",
            "NAIST-2003",
            "ANTLR-PD-fallback",
            "PostgreSQL",
            "OSL-1.0",
            "NGPL",
            "CC-BY-NC-ND-4.0",
            "CPOL-1.02",
            "FSFULLR",
            "GFDL-1.2-no-invariants-only",
            "Net-SNMP",
            "ADSL",
            "Sendmail-8.23",
            "CNRI-Jython",
            "RPL-1.5",
            "BSD-2-Clause-Patent",
            "OFL-1.1-no-RFN",
            "APSL-1.2",
            "OLDAP-2.4",
            "MPL-2.0-no-copyleft-exception",
            "ISC",
            "CC-BY-SA-2.5",
            "Sleepycat",
            "CUA-OPL-1.0",
            "Frameworx-1.0",
            "CPAL-1.0",
            "NLOD-2.0",
            "CC-BY-NC-2.0",
            "GFDL-1.1-no-invariants-or-later",
            "CC-BY-2.5",
            "Newsletr",
            "Parity-7.0.0",
            "Leptonica",
            "MIT-CMU",
            "APAFML",
            "CC-BY-NC-2.5",
            "CAL-1.0-Combined-Work-Exception",
            "BSD-4-Clause-Shortened",
            "NPL-1.1",
            "Qhull",
            "CECILL-C",
            "GPL-1.0-only",
            "CC-BY-NC-ND-3.0-DE",
            "CC-BY-NC-SA-3.0",
            "CC-BY-NC-SA-1.0",
            "MIT-open-group",
            "Multics",
            "SWL",
            "GPL-1.0+",
            "GPL-3.0-or-later",
            "DOC",
            "PHP-3.0",
            "SISSL-1.2",
            "CDL-1.0",
            "LPL-1.0",
            "RHeCos-1.1",
            "LAL-1.3",
            "CC-BY-SA-3.0-DE",
            "CDLA-Permissive-1.0",
            "gnuplot",
            "App-s2p",
            "iMatix",
            "MS-PL",
            "eCos-2.0",
            "BSD-3-Clause",
            "CC-BY-NC-ND-3.0-IGO",
            "ICU",
            "AGPL-3.0-or-later",
            "CC-BY-SA-2.1-JP",
            "CC-BY-NC-SA-4.0",
            "Unlicense",
            "CC-BY-NC-3.0-DE",
            "OLDAP-1.4",
            "CERN-OHL-W-2.0",
            "SugarCRM-1.1.3",
            "IPA",
            "AFL-2.0",
            "Unicode-DFS-2016",
            "CC-BY-NC-ND-3.0",
            "CERN-OHL-P-2.0",
            "CC-BY-NC-3.0",
            "COIL-1.0",
            "CAL-1.0",
            "LiLiQ-P-1.1",
            "OFL-1.1-RFN",
            "LPL-1.02",
            "OLDAP-1.3",
            "OGDL-Taiwan-1.0",
            "CC-BY-NC-SA-2.0",
            "Python-2.0",
            "NTP-0",
            "FSFAP",
            "ErlPL-1.1",
            "Barr",
            "CC-BY-3.0-US",
            "BSD-3-Clause-No-Nuclear-License-2014",
            "NLPL",
            "BSD-3-Clause-Clear",
            "SGI-B-1.1",
            "PDDL-1.0",
            "CDDL-1.0",
            "LGPL-2.1-or-later",
            "BlueOak-1.0.0",
            "CC-BY-NC-SA-2.0-FR",
            "FDK-AAC",
            "StandardML-NJ",
            "AGPL-1.0-only",
            "CECILL-1.0",
            "AAL",
            "GPL-2.0-with-font-exception",
            "Info-ZIP",
            "SSH-OpenSSH",
            "SSH-short",
            "GPL-2.0-or-later",
            "ClArtistic",
            "SNIA",
            "GFDL-1.1-invariants-only",
            "BSD-3-Clause-No-Military-License",
            "GFDL-1.1",
            "MPL-1.1",
            "OLDAP-1.1",
            "JSON",
            "GFDL-1.3-no-invariants-only",
            "OCLC-2.0",
            "OLDAP-2.0.1",
            "FreeBSD-DOC",
            "GPL-1.0-or-later",
            "YPL-1.1",
            "CPL-1.0",
            "Apache-1.0",
            "OFL-1.0",
            "CC-BY-4.0",
            "DSDP",
            "IBM-pibs",
            "MIT-0",
            "DRL-1.0",
            "Zlib",
            "APL-1.0",
            "Watcom-1.0",
            "GPL-2.0-with-GCC-exception",
            "EUPL-1.2",
            "FSFUL",
            "NASA-1.3",
            "BSD-2-Clause",
            "XFree86-1.1",
            "Eurosym",
            "OLDAP-2.8",
            "dvipdfm",
            "NIST-PD",
            "Apache-1.1",
            "Parity-6.0.0",
            "CC-BY-2.0",
            "LGPL-3.0+",
            "BSD-2-Clause-Views",
            "GPL-2.0-with-classpath-exception",
            "BSD-3-Clause-No-Nuclear-Warranty",
            "X11",
            "CDLA-Permissive-2.0",
            "HaskellReport",
            "Artistic-1.0-cl8",
            "APSL-2.0",
            "GPL-3.0+",
            "SHL-0.5",
            "CNRI-Python-GPL-Compatible",
            "Condor-1.1",
            "OLDAP-2.3",
            "GPL-2.0-only",
            "BUSL-1.1",
            "LiLiQ-R-1.1",
            "AMPAS",
            "copyleft-next-0.3.1",
            "GFDL-1.3-invariants-or-later",
            "OLDAP-2.7",
            "OSL-2.0",
            "Unicode-DFS-2015",
            "CATOSL-1.1",
            "RSCPL",
            "libpng-2.0",
            "LPPL-1.1",
            "CDLA-Sharing-1.0",
            "Glulxe",
            "GFDL-1.3-no-invariants-or-later",
            "OLDAP-1.2",
            "CDDL-1.1",
            "CERN-OHL-1.1",
            "BSD-Source-Code",
            "IJG",
            "Zimbra-1.4",
            "0BSD",
            "CC-BY-1.0",
            "wxWindows",
            "ZPL-2.1",
            "NTP",
            "Artistic-1.0-Perl",
            "CC-BY-ND-2.0",
            "CC-BY-ND-4.0",
            "Adobe-2006",
            "EPL-1.0",
            "diffmark",
            "xinetd",
            "Plexus",
            "JPNIC",
            "Adobe-Glyph",
            "Cube",
            "TCP-wrappers",
            "CC-BY-SA-1.0",
            "BSD-2-Clause-FreeBSD",
            "OGL-Canada-2.0",
            "ANTLR-PD",
            "LGPL-2.1+",
            "OSL-2.1",
            "psutils",
            "SCEA",
            "MirOS",
            "Hippocratic-2.1",
            "GFDL-1.2-invariants-only",
            "LGPL-2.1-only",
            "Entessa",
            "MS-RL",
            "libselinux-1.0",
            "LGPL-2.0",
            "OLDAP-2.5",
            "Imlib2",
            "Libpng",
            "SchemeReport",
            "MPL-1.0",
            "SAX-PD",
            "NLOD-1.0",
            "SimPL-2.0",
            "TU-Berlin-1.0",
            "GFDL-1.1-no-invariants-only",
            "CC-BY-ND-3.0-DE",
            "MakeIndex",
            "EPICS",
            "GFDL-1.3-invariants-only",
            "XSkat",
            "bzip2-1.0.5",
            "Community-Spec-1.0",
            "GL2PS",
            "HPND",
            "bzip2-1.0.6",
            "CC-BY-NC-1.0",
            "Fair",
            "CECILL-B",
            "Glide",
            "CC-BY-SA-4.0",
            "CC0-1.0",
            "MIT-enna",
            "Wsuipa",
            "RSA-MD",
            "VOSTROM",
            "O-UDA-1.0",
            "CERN-OHL-S-2.0",
            "X11-distribute-modifications-variant",
            "copyleft-next-0.3.0",
            "Zimbra-1.3",
            "NIST-PD-fallback",
            "Nokia",
            "AFL-2.1",
            "ZPL-2.0",
            "ODbL-1.0",
            "zlib-acknowledgement",
            "PHP-3.01",
            "Afmparse",
            "HPND-sell-variant",
            "PolyForm-Small-Business-1.0.0",
            "IPL-1.0",
            "CECILL-1.1",
            "MIT-feh",
            "OFL-1.0-RFN",
            "TMate",
            "BSD-3-Clause-No-Nuclear-License",
            "W3C-19980720",
            "SPL-1.0",
            "NetCDF",
            "Aladdin",
            "AMDPLPA",
            "CrystalStacker",
            "Intel-ACPI",
            "CERN-OHL-1.2",
            "CC-BY-NC-SA-3.0-DE",
            "MIT",
            "Zed",
            "OLDAP-2.0",
            "MulanPSL-1.0",
            "EFL-2.0",
            "Latex2e",
            "Spencer-94",
            "OPL-1.0",
            "CC-BY-NC-4.0",
            "LGPL-3.0-or-later",
            "UPL-1.0",
            "NCSA",
            "SGI-B-2.0",
            "GPL-3.0-with-GCC-exception",
            "Zend-2.0",
            "ImageMagick",
            "OLDAP-2.6",
            "Unicode-TOU",
            "GPL-3.0-only",
            "Artistic-2.0",
            "blessing",
            "etalab-2.0",
            "GFDL-1.2-only",
            "LPPL-1.0",
            "Rdisc",
            "BSD-3-Clause-Modification",
            "Xerox",
            "MPL-2.0",
            "BitTorrent-1.1",
            "CC-BY-NC-ND-2.0",
            "SISSL",
            "libtiff",
            "CC-BY-NC-SA-2.0-UK",
            "D-FSL-1.0",
            "LPPL-1.2",
            "TAPR-OHL-1.0",
            "EUPL-1.0",
            "SHL-0.51",
            "FTL",
            "W3C-20150513",
            "OSET-PL-2.1",
            "EUDatagrid",
            "UCL-1.0",
            "Borceux",
            "Elastic-2.0",
            "BSD-2-Clause-NetBSD",
            "BSD-3-Clause-Open-MPI",
            "OSL-3.0",
            "curl",
            "Spencer-86",
            "BSL-1.0",
            "SMLNJ",
            "TOSL",
            "NOSL",
            "AFL-1.2",
            "MulanPSL-2.0",
            "Motosoto",
            "CC-BY-NC-SA-2.5",
            "JasPer-2.0",
            "BSD-4-Clause-UC",
            "Bahyph",
            "VSL-1.0",
            "W3C",
            "ODC-By-1.0",
            "BitTorrent-1.0",
            "OGL-UK-2.0",
            "LGPL-3.0-only",
            "Xnet",
            "Ruby",
            "GFDL-1.3",
            "ZPL-1.1",
            "OCCT-PL",
            "LPPL-1.3c",
            "Apache-2.0",
            "GD",
            "CC-BY-3.0-NL",
            "LPPL-1.3a",
            "CC-BY-2.5-AU",
            "GFDL-1.1-only",
            "GFDL-1.1-or-later",
            "OGL-UK-3.0",
            "YPL-1.0",
            "RPL-1.1",
            "LGPL-2.0-or-later",
            "OPUBL-1.0",
            "Noweb",
            "AFL-3.0",
            "Nunit",
            "CC-BY-3.0",
            "Beerware",
            "Caldera",
            "GPL-1.0",
            "GPL-2.0+",
            "NCGL-UK-2.0",
            "CC-BY-ND-2.5",
            "GPL-2.0",
            "Intel",
            "Vim",
            "CC-BY-SA-2.0",
            "MITNFA",
            "APSL-1.1",
            "GFDL-1.2-or-later",
            "BSD-3-Clause-Attribution",
            "OFL-1.0-no-RFN",
            "Naumen",
            "CC-BY-NC-ND-2.5",
            "C-UDA-1.0",
            "LGPLLR",
            "mpich2",
            "APSL-1.0",
            "Linux-OpenIB",
            "MIT-advertising",
            "GFDL-1.2",
            "OGTSL",
            "Dotseqn",
            "DL-DE-BY-2.0",
            "Saxpath",
            "AGPL-3.0",
            "Abstyles",
            "CC-BY-SA-3.0",
            "Giftware",
            "FreeImage",
            "CECILL-2.1",
            "RPSL-1.0",
            "GFDL-1.3-or-later",
            "GFDL-1.1-invariants-or-later",
            "ECL-2.0",
            "LiLiQ-Rplus-1.1",
            "GPL-3.0-with-autoconf-exception",
            "Jam",
            "GFDL-1.2-no-invariants-or-later",
            "CECILL-2.0",
            "PolyForm-Noncommercial-1.0.0",
            "OGC-1.0",
            "CC-BY-ND-3.0",
            "QPL-1.0",
            "LAL-1.2",
            "CC-BY-3.0-DE",
            "OpenSSL",
            "Spencer-99",
            "CC-BY-SA-3.0-AT",
            "BSD-Protection",
            "OLDAP-2.2.2",
            "NRL",
            "TORQUE-1.1",
            "HTMLTIDY",
            "SSPL-1.0",
            "NPL-1.0",
            "LGPL-2.0-only",
            "AGPL-3.0-only",
            "GFDL-1.2-invariants-or-later",
            "GPL-2.0-with-bison-exception",
            "CC-BY-NC-ND-1.0",
            "ECL-1.0",
            "WTFPL",
            "CC-BY-SA-2.0-UK",
            "GPL-3.0",
            "OLDAP-2.2.1",
            "SMPPL",
            "CC-BY-3.0-AT",
            "EFL-1.0",
            "NBPL-1.0",
            "BSD-3-Clause-LBNL",
            "AGPL-1.0",
            "Crossword",
            "TCL",
            "CC-BY-ND-1.0",
            "AML",
            "TU-Berlin-2.0",
            "GFDL-1.3-only",
            "NPOSL-3.0",
            "BSD-4-Clause",
            "gSOAP-1.3b",
            "LGPL-2.1",
            "LGPL-3.0",
            "freertos-exception-2.0",
            "Swift-exception",
            "Qt-LGPL-exception-1.1",
            "gnu-javamail-exception",
            "CLISP-exception-2.0",
            "eCos-exception-2.0",
            "GPL-CC-1.0",
            "DigiRule-FOSS-exception",
            "Font-exception-2.0",
            "Qt-GPL-exception-1.0",
            "PS-or-PDF-font-exception-20170817",
            "GPL-3.0-linking-source-exception",
            "Linux-syscall-note",
            "GCC-exception-2.0",
            "LZMA-exception",
            "Autoconf-exception-3.0",
            "u-boot-exception-2.0",
            "LLVM-exception",
            "OCaml-LGPL-linking-exception",
            "Autoconf-exception-2.0",
            "Bootloader-exception",
            "LGPL-3.0-linking-exception",
            "openvpn-openssl-exception",
            "FLTK-exception",
            "Bison-exception-2.2",
            "OCCT-exception-1.0",
            "GCC-exception-3.1",
            "OpenJDK-assembly-exception-1.0",
            "WxWindows-exception-3.1",
            "Fawkes-Runtime-exception",
            "Nokia-Qt-exception-1.1",
            "Qwt-exception-1.0",
            "Universal-FOSS-exception-1.0",
            "Classpath-exception-2.0",
            "SHL-2.0",
            "GPL-3.0-linking-exception",
            "SHL-2.1",
            "Libtool-exception",
            "mif-exception",
            "389-exception",
            "i2p-gpl-java-exception"
          ]
        },
        "name": {
          "type": "string",
          "description": "If SPDX does not define the license used, use this field to provide the license name.",
          "title": "License Name"
        },
        "url": {
          "type": "string",
          "format": "iri-reference",
          "description": "The URL to the license file. If specified, also specify a 'license' externalReference for completeness.",
          "title": "License URL"
        }
      },
      "title": "License Object"
    },
    "licenseChoice": {
      "type": "object",
      "properties": {
        "license": {
          "$ref": "#/definitions/license"
        },
        "expression": {
          "type": "string",
          "title": "SPDX License Expression"
        }
      },
      "title": "License(s)"
    },
    "dependency": {
      "type": "object",
      "required": [
        "ref"
      ],
      "properties": {
        "ref": {
          "description": "References a component by the components bom-ref attribute.",
          "title": "Reference",
          "$ref": "#/definitions/refType"
        },
        "dependsOn": {
          "type": "array",
          "description": "The bom-ref identifiers of the components that are dependencies of this dependency object.",
          "title": "Depends On",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/refType"
          }
        }
      },
      "title": "Dependency",
      "description": "Defines the direct dependencies of a component. Components that do not have their own dependencies MUST be declared as empty elements within the graph. Components that are not represented in the dependency graph may have unknown dependencies. Veracode recommends that implementations assume this to be unclear and not an indicator of a component being dependency-free.",
      "additionalProperties": false
    },
    "property": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the property. Duplicate names are allowed, each potentially having a different value.",
          "title": "Name"
        },
        "value": {
          "type": "string",
          "description": "The value of the property.",
          "title": "Value"
        }
      },
      "title": "Lightweight name-value pair"
    },
    "cwe": {
      "type": "integer",
      "title": "CWE",
      "minimum": 1,
      "description": "Integer representation of a Common Weaknesses Enumeration (CWE). For example, 399 (of https://cwe.mitre.org/data/definitions/399.html)"
    },
    "severity": {
      "type": "string",
      "title": "Severity",
      "description": "Textual representation of the severity of the vulnerability adopted by the analysis method. If the analysis method uses values other than what is provided, the user is expected to translate appropriately.",
      "enum": [
        "critical",
        "high",
        "medium",
        "low",
        "none"
      ]
    },
    "scoreMethod": {
      "type": "string",
      "title": "Method",
      "description": "Specifies the severity or risk scoring methodology or standard used.\n\n* CVSSv2 - [Common Vulnerability Scoring System v2](https://www.first.org/cvss/v2/)\n* CVSSv3 - [Common Vulnerability Scoring System v3](https://www.first.org/cvss/v3-0/)\n* CVSSv31 - [Common Vulnerability Scoring System v3.1](https://www.first.org/cvss/v3-1/)\n* OWASP - [OWASP Risk Rating Methodology](https://owasp.org/www-community/OWASP_Risk_Rating_Methodology)",
      "enum": [
        "CVSSv2",
        "CVSSv3"
      ]
    },
    "rating": {
      "type": "object",
      "properties": {
        "score": {
          "type": "number",
          "description": "The numerical score of the rating.",
          "title": "Score"
        },
        "severity": {
          "description": "Textual representation of the severity that corresponds to the numerical score of the rating.",
          "$ref": "#/definitions/severity"
        },
        "method": {
          "$ref": "#/definitions/scoreMethod"
        },
        "vector": {
          "type": "string",
          "description": "Textual representation of the metric values used to score the vulnerability.",
          "title": "Vector"
        }
      },
      "title": "Rating",
      "description": "Defines the severity or risk ratings of a vulnerability."
    },
    "vulnerabilitySource": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "The URL of the vulnerability documentation as provided by the source.",
          "title": "URL"
        },
        "name": {
          "type": "string",
          "description": "The name of the source.",
          "title": "Name"
        }
      },
      "title": "Source",
      "description": "The source of vulnerability information. This is often the organization that published the vulnerability."
    },
    "vulnerability": {
      "type": "object",
      "properties": {
        "bom-ref": {
          "description": "An optional identifier which can be used to reference the vulnerability elsewhere in the BOM. Every bom-ref MUST be unique within the BOM.",
          "title": "BOM Reference",
          "$ref": "#/definitions/refType"
        },
        "id": {
          "type": "string",
          "description": "The identifier that uniquely identifies the vulnerability.",
          "title": "ID"
        },
        "source": {
          "description": "The source that published the vulnerability.",
          "$ref": "#/definitions/vulnerabilitySource"
        },
        "ratings": {
          "type": "array",
          "description": "List of vulnerability ratings.",
          "title": "Ratings",
          "items": {
            "$ref": "#/definitions/rating"
          }
        },
        "cwes": {
          "type": "array",
          "description": "List of Common Weakness Enumeration (CWEs) codes that describes this vulnerability. For example, 399 (of https://cwe.mitre.org/data/definitions/399.html)",
          "title": "CWEs",
          "items": {
            "$ref": "#/definitions/cwe"
          }
        },
        "description": {
          "type": "string",
          "description": "A description of the vulnerability as provided by the source.",
          "title": "Description"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time (timestamp) when the vulnerability record was created in the vulnerability database.",
          "title": "Created"
        },
        "published": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time (timestamp) when the vulnerability record was first published.",
          "title": "Published"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time (timestamp) when the vulnerability record was last updated.",
          "title": "Updated"
        },
        "affects": {
          "type": "array",
          "description": "The components or services that are affected by the vulnerability.",
          "title": "Affects",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/vulnerability_affects"
          }
        },
        "properties": {
          "type": "array",
          "description": "Provides the ability to document properties in a name-value store. This provides flexibility to include data not officially supported in the standard without having to use additional namespaces or create extensions. Unlike key-value stores, properties support duplicate names, each potentially having different values. Property names of interest to the general public are encouraged to be registered in the [CycloneDX Property Taxonomy](https://github.com/CycloneDX/cyclonedx-property-taxonomy). Formal registration is optional.",
          "title": "Properties",
          "items": {
            "$ref": "#/definitions/property"
          }
        }
      },
      "title": "Vulnerability",
      "description": "Defines a weakness in a component or service that could be exploited or triggered by a threat source."
    },
    "spdxvulnerability": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The identifier that uniquely identifies the vulnerability.",
          "title": "ID"
        },
        "source": {
          "description": "The source that published the vulnerability.",
          "$ref": "#/definitions/vulnerabilitySource"
        },
        "ratings": {
          "type": "array",
          "description": "List of vulnerability ratings.",
          "title": "Ratings",
          "items": {
            "$ref": "#/definitions/rating"
          }
        },
        "cwes": {
          "type": "array",
          "description": "List of Common Weakness Enumeration (CWEs) codes that describes this vulnerability. For example, 399 (of https://cwe.mitre.org/data/definitions/399.html)",
          "title": "CWEs",
          "items": {
            "$ref": "#/definitions/cwe"
          }
        },
        "description": {
          "type": "string",
          "description": "A description of the vulnerability as provided by the source.",
          "title": "Description"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time (timestamp) when the vulnerability record was created in the vulnerability database.",
          "title": "Created"
        },
        "published": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time (timestamp) when the vulnerability record was first published.",
          "title": "Published"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time (timestamp) when the vulnerability record was last updated.",
          "title": "Updated"
        }
      },
      "title": "Spdx Vulnerability",
      "description": "Defines a weakness in a component or service that could be exploited or triggered by a threat source."
    },
    "version": {
      "type": "string",
      "minLength": 1,
      "maxLength": 1024,
      "description": "A single version of a component or service."
    },
    "Project_linked_application": {
      "type": "object",
      "properties": {
        "guid": {
          "type": "string",
          "example": "9dc43444-f9e9-4085-850f-9a0d6e31a9f3"
        },
        "name": {
          "type": "string",
          "example": "test-project"
        }
      }
    },
    "sbomspdx_creationInfo": {
      "type": "object",
      "properties": {
        "comment": {
          "type": "string",
          "example": "Veracode SPDX SBOM",
          "description": "SPDX specification version. Current version is SPDX-2.3"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "example": "2023-01-13T19:22:23Z",
          "description": "When the SPDX document was originally created. The date is to be specified according to combined date and time in UTC format as specified in ISO 8601 standard."
        },
        "creators": {
          "type": "array",
          "description": "An optional field for creators of the SPDX document to provide general comments about the creation of the SPDX document or any other relevant comment not included in the other fields.",
          "items": {
            "type": "string",
            "example": "Tool: Veracode SPDX Tool"
          }
        }
      }
    },
    "sbomspdx_externalRefs": {
      "type": "object",
      "properties": {
        "comment": {
          "type": "string",
          "example": "{\"id\":\"CVE-2017-16137\",\"source\":{\"empty\":false,\"present\":true},\"ratings\":[{\"score\":5.0,\"severity\":\"medium\",\"method\":\"CVSSv2\",\"vector\":{\"empty\":false,\"present\":true}},{\"score\":5.3,\"severity\":\"medium\",\"method\":\"CVSSv3\",\"vector\":{\"empty\":false,\"present\":true}}],\"created\":{\"empty\":false,\"present\":true},\"published\":{\"empty\":false,\"present\":true},\"updated\":{\"empty\":false,\"present\":true},\"cwes\":[400],\"description\":\"Regular Expression Denial Of Service (ReDoS) debug is vulnerable to regular expression denial of service (ReDoS). The regular expression is used to map `%o` to `util.inspect()` can take awhile for long strings, hanging an application.\",\"properties\":[{\"name\":\"Vulnerability Link\",\"value\":\"https://lists.apache.org/thread.html/rb5ac16fad337d1f3bb7079549f97d8166d0ef3082629417c39f12d63@%3Cnotifications.netbeans.apache.org%3E\"},{\"name\":\"Vulnerability Link\",\"value\":\"https://lists.apache.org/thread.html/r8ba4c628fba7181af58817d452119481adce4ba92e889c643e4c7dd3@%3Ccommits.netbeans.apache.org%3E\"},{\"name\":\"Vulnerability Link\",\"value\":\"https://github.com/visionmedia/debug/pull/504\"},{\"name\":\"Vulnerability Link\",\"value\":\"https://nodesecurity.io/advisories/534\"},{\"name\":\"Vulnerability Link\",\"value\":\"https://github.com/visionmedia/debug/issues/501\"}]}",
          "description": "Vulnerability details wrapped in a json string. json schema refer to following link: #/definitions/spdxvulnerability"
        },
        "referenceCategory": {
          "type": "string",
          "example": "SECURITY",
          "description": "SPDX package external reference category. It will be fixed value SECURITY in Veracode SPDX document"
        },
        "referenceLocator": {
          "type": "string",
          "example": "https://lists.apache.org/thread.html/rb5ac16fad337d1f3bb7079549f97d8166d0ef3082629417c39f12d63@%3Cnotifications.netbeans.apache.org%3E",
          "description": "Vulnerability reference web page"
        },
        "referenceType": {
          "type": "string",
          "example": "advisory",
          "description": "PDX package external reference type, It will be fixed value advisory in Veracode SPDX document"
        }
      }
    },
    "sbomspdx_packages": {
      "type": "object",
      "properties": {
        "SPDXID": {
          "type": "string",
          "example": "SPDXRef-Package-feef627b-4211-5e39-ab98-f991d55231b6",
          "description": "Identifier for library package in SPDX document. This identifier will be used in relationship as the reference identifier"
        },
        "description": {
          "type": "string",
          "example": "npm:win32::0.9.12:",
          "description": "Description of the library. Library coordinates will be used as description"
        },
        "downloadLocation": {
          "type": "string",
          "example": "git://github.com/coderaiser/win32.git",
          "description": "URL to download the libary artifacts"
        },
        "filesAnalyzed": {
          "type": "boolean",
          "description": "Whether the file content of this package has been available for or subjected to analysis when creating the SPDX document. It is false in Veracode SPDX document"
        },
        "homepage": {
          "type": "string",
          "example": "https://github.com/coderaiser",
          "description": "Library provider homepage"
        },
        "licenseConcluded": {
          "type": "string",
          "example": "MIT",
          "description": "Contain the license the SPDX document creator has concluded as governing the package or alternative values, if the governing license cannot be determined. It will be the same as licenseDeclared."
        },
        "licenseDeclared": {
          "type": "string",
          "example": "MIT",
          "description": "List the licenses that have been declared by the authors of the package."
        },
        "licenseInfoFromFiles": {
          "type": "array",
          "description": "This field is to contain a list of all licenses found for the library.",
          "items": {
            "type": "string",
            "example": "MIT"
          }
        },
        "name": {
          "type": "string",
          "example": "win32",
          "description": "full name of the library as given by the library provider"
        },
        "packageFileName": {
          "type": "string",
          "example": "file532902_1670881504691_html/example-javascript/node_modules:win32",
          "description": "Library file path and name"
        },
        "releaseDate": {
          "type": "string",
          "format": "date-time",
          "example": "2016-11-08T00:00:00Z",
          "description": "Library release date"
        },
        "versionInfo": {
          "type": "string",
          "example": "0.9.12",
          "description": "Library version"
        },
        "externalRefs": {
          "type": "array",
          "description": "List of vulnerabilities affects the library. Each vulnerability is wrapped in a json string. json schema refer to spdx vulnerability object",
          "items": {
            "$ref": "#/definitions/sbomspdx_externalRefs"
          }
        }
      }
    },
    "sbomspdx_relationships": {
      "type": "object",
      "properties": {
        "spdxElementId": {
          "type": "string",
          "example": "SPDXRef-Package-feef627b-4211-5e39-ab98-f991d55231b6",
          "description": "Reference package identifier"
        },
        "relationshipType": {
          "type": "string",
          "example": "DEPENDS_ON",
          "description": "Relationsship type. It is a fixed value DEPENDS_ON in Veracode SPDX document to present dependency between packages"
        },
        "relatedSpdxElement": {
          "type": "string",
          "example": "SPDXRef-Package-e9383cf0-3840-5b8f-8bfc-cb0b6c5fb559",
          "description": "The package identifier on which the the referred package depends"
        },
        "comment": {
          "type": "string",
          "example": "npm:win32::0.9.12: depends on npm:pullout::1.0.3:",
          "description": "Add package (library) coordinates in a comment to provide user-friendly description of the relationship."
        }
      }
    },
    "vulnerability_affects": {
      "type": "object",
      "required": [
        "ref"
      ],
      "properties": {
        "ref": {
          "description": "References a component or service by the objects bom-ref.",
          "title": "Reference",
          "$ref": "#/definitions/refType"
        }
      }
    }
  }
}