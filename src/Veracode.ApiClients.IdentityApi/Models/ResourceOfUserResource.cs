// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Veracode.ApiClients.IdentityApi.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class ResourceOfUserResource
    {
        /// <summary>
        /// Initializes a new instance of the ResourceOfUserResource class.
        /// </summary>
        public ResourceOfUserResource()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ResourceOfUserResource class.
        /// </summary>
        /// <param name="userType">Possible values include: 'VOSP',
        /// 'NO_VOSP'</param>
        public ResourceOfUserResource(bool? active = default(bool?), bool? agreeTerms = default(bool?), bool? allowMultipleSessions = default(bool?), IList<string> allowedIpAddresses = default(IList<string>), ResourceOfApiCredentials apiCredentials = default(ResourceOfApiCredentials), bool? deleted = default(bool?), string emailAddress = default(string), string firstName = default(string), bool? ipRestricted = default(bool?), string lastHost = default(string), string lastLogin = default(string), string lastName = default(string), object _links = default(object), string loginAnswer = default(string), bool? loginEnabled = default(bool?), int? loginFailureCount = default(int?), string loginQuestion = default(string), string oktaUserId = default(string), ResourceOfOrganization organization = default(ResourceOfOrganization), string password = default(string), IList<ResourceOfPermission> permissions = default(IList<ResourceOfPermission>), string phone = default(string), bool? pinRequired = default(bool?), IList<ResourceOfOrganization> proxyOrganizations = default(IList<ResourceOfOrganization>), IList<ResourceOfRole> roles = default(IList<ResourceOfRole>), string samlSubject = default(string), bool? samlUser = default(bool?), bool? showWelcome = default(bool?), IList<ResourceOfUserTeam> teams = default(IList<ResourceOfUserTeam>), string title = default(string), string userId = default(string), int? userLegacyId = default(int?), string userName = default(string), string userType = default(string))
        {
            Active = active;
            AgreeTerms = agreeTerms;
            AllowMultipleSessions = allowMultipleSessions;
            AllowedIpAddresses = allowedIpAddresses;
            ApiCredentials = apiCredentials;
            Deleted = deleted;
            EmailAddress = emailAddress;
            FirstName = firstName;
            IpRestricted = ipRestricted;
            LastHost = lastHost;
            LastLogin = lastLogin;
            LastName = lastName;
            this._links = _links;
            LoginAnswer = loginAnswer;
            LoginEnabled = loginEnabled;
            LoginFailureCount = loginFailureCount;
            LoginQuestion = loginQuestion;
            OktaUserId = oktaUserId;
            Organization = organization;
            Password = password;
            Permissions = permissions;
            Phone = phone;
            PinRequired = pinRequired;
            ProxyOrganizations = proxyOrganizations;
            Roles = roles;
            SamlSubject = samlSubject;
            SamlUser = samlUser;
            ShowWelcome = showWelcome;
            Teams = teams;
            Title = title;
            UserId = userId;
            UserLegacyId = userLegacyId;
            UserName = userName;
            UserType = userType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "active")]
        public bool? Active { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "agree_terms")]
        public bool? AgreeTerms { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "allow_multiple_sessions")]
        public bool? AllowMultipleSessions { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "allowed_ip_addresses")]
        public IList<string> AllowedIpAddresses { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "api_credentials")]
        public ResourceOfApiCredentials ApiCredentials { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "deleted")]
        public bool? Deleted { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "email_address")]
        public string EmailAddress { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "first_name")]
        public string FirstName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ip_restricted")]
        public bool? IpRestricted { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "last_host")]
        public string LastHost { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "last_login")]
        public string LastLogin { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "last_name")]
        public string LastName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_links")]
        public object _links { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "login_answer")]
        public string LoginAnswer { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "login_enabled")]
        public bool? LoginEnabled { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "login_failure_count")]
        public int? LoginFailureCount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "login_question")]
        public string LoginQuestion { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "okta_user_id")]
        public string OktaUserId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "organization")]
        public ResourceOfOrganization Organization { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "password")]
        public string Password { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "permissions")]
        public IList<ResourceOfPermission> Permissions { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "phone")]
        public string Phone { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "pin_required")]
        public bool? PinRequired { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "proxy_organizations")]
        public IList<ResourceOfOrganization> ProxyOrganizations { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "roles")]
        public IList<ResourceOfRole> Roles { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "saml_subject")]
        public string SamlSubject { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "saml_user")]
        public bool? SamlUser { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "show_welcome")]
        public bool? ShowWelcome { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "teams")]
        public IList<ResourceOfUserTeam> Teams { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "title")]
        public string Title { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "user_id")]
        public string UserId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "user_legacy_id")]
        public int? UserLegacyId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "user_name")]
        public string UserName { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'VOSP', 'NO_VOSP'
        /// </summary>
        [JsonProperty(PropertyName = "user_type")]
        public string UserType { get; set; }

    }
}
